{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/route.js","../src/utils.js","../src/controls/InputNumber.svelte","../src/controls/InputSelect.svelte","../src/controls/InputDurationMin.svelte","../src/controls/InputCheckbox.svelte","../src/Settings.svelte","../src/TreeItem.svelte","../src/TreeItemOption.svelte","../src/pieces/SVGPiece.svelte","../src/pieces/SVGItem.svelte","../src/pieces/JSCADView.svelte","../src/pieces/SVGDrawing.svelte","../src/pieces/utils.js","../src/pieces/Group.js","../src/Component.svelte","../src/ChildrenPositions.svelte","../src/estimation.js","../src/Estimation.svelte","../src/ListeDebit.svelte","../src/ensembles/Ensemble.svelte","../src/draw/Cote.svelte","../src/pieces/piece.js","../src/ensembles/Porte.svelte","../src/ensembles/Caisson.svelte","../src/ensembles/Etagere.svelte","../src/ensembles/Facade.svelte","../src/ensembles/Tiroir.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\nexport function routeInfo(hash) {\n  const path = hash.substr(2)\n  const mcomp = path.match(/^component\\/(.*)$/)\n  const msettings = path.match(/^settings$/)\n  return {\n    component_id:       mcomp ? `component-${mcomp[1]}` : null,\n    component_selector: mcomp ? `#component-${mcomp[1]}` : null,\n    component_path:     mcomp ? mcomp[1] : null,\n    settings:           !!msettings,\n    root:               path == '',\n  }\n}\n\n// Take a callback. The callback is given as argument the routeInfo and should\n// return a list of elements that are target for the current route or none if\n// there is no target.\nexport function routeDeclare(cb) {\n  let previousTargets = []\n\n  function onHashChange(){\n    if(previousTargets) for(let t of previousTargets) if(t) {\n      console.log('route away', t)\n      t.classList.remove('target')\n    }\n    previousTargets = cb(routeInfo(window.location.hash))\n    if(previousTargets) for(let t of previousTargets) if(t) {\n      t.classList.add('target')\n      console.log('route to', t)\n    }\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n  return onHashChange;\n}\n","\nexport function cleanObject(src){\n  return Object.keys(src)\n    .filter(k => (src[k] !== null && src[k] !== undefined))\n    .reduce((m, k) => (m[k] = src[k], m), {})\n}\n\nexport function pipeline(data, ...operations){\n  let res = data\n  for(let i = 0; i < operations.length; i++) {\n    res = operations[i](res)\n  }\n  return res\n}\n\nexport function nextId(list) {\n  return list.reduce((id, item) => Math.max(id, item.id+1), list.length)\n}\n\nexport function reduceToObject(id, idval) {\n  return (obj, item) => {\n    if(!obj) obj = {}\n    obj[item[id || 0]] = (id == null || idval) ? item[idval || 1] : item\n    return obj\n  }\n}\nexport function arrayToObject(array, id, idval) {\n  array.reduce(reduceToObject(array, id, idval), {})\n}\n","<script>\n\n  export let value = null\n  export let def = null\n  export let force = false\n  export let min = null\n  export let max = null\n  export let step = null\n  export let size = 5\n\n  $: ui = {\n    placeholder: def,\n    min: force ? def : min,\n    max: force ? def : max,\n    step: step || 'any',\n  }\n\n  //let uiValue = value\n  //$: value = (uiValue == null) ? undefined : uiValue\n\n</script>\n\n<input\n  style=\"width: {parseInt(size)+1}em\"\n  type=number\n  bind:value={value}\n  placeholder={ui.placeholder}\n  min={ui.min}\n  max={ui.max}\n  step={ui.step}\n  />\n","<script>\n\n  export let value = null\n  export let def = null\n  export let force = false\n  export let init = null\n\n  if(init != null && value == null) value = init\n\n  let defname = def\n  let select\n  let default_value_id =  Math.random().toString(36).substring(2) +\n                          Math.random().toString(36).substring(2) +\n                          Math.random().toString(36).substring(2)\n\n  let inner_val = (def != null && value == null) ? default_value_id : value\n  $: value = (def != null && inner_val == default_value_id) ? null : inner_val\n\n  $: findDefName(select)\n  function findDefName(select){\n    if(!select) return\n    let option = Array.from(select.options).find(op => op.value == def)\n    if(option) defname = option.textContent\n  }\n\n  $: error = force && value != null && value != def\n\n</script>\n<style>\n  select.error {\n    box-shadow: 0 0 1.5px 1px red;\n  }\n</style>\n\n<select bind:value={inner_val} bind:this={select} class:error={error}>\n  {#if def != null}\n  <option value=\"{default_value_id}\">{defname} (par défaut)</option>\n  {/if}\n  <slot></slot>\n</select>\n","<script>\n\n  export let value = null\n  export let def = null\n  export let size = 5\n  export let step = \"any\"\n  export let title = \"\";\n\n</script>\n\n<input\n  style=\"width: {size+1}em\"\n  type=number\n  bind:value={value}\n  placeholder={def}\n  step={step}\n  title={title}\n  /> min\n","<script>\n\n  export let checked = null\n  export let def = null\n  export let force = false\n  export let tristate = true\n\n  function change(e){\n    let prev = !e.target.checked\n    let curr = e.target.checked\n\n    if(e.target.readOnly) {\n      checked = curr\n    } else if(prev == def && tristate && def !== null) {\n      checked = null\n      e.target.checked = prev\n    } else {\n      checked = curr\n    }\n  }\n\n</script>\n\n<input\n  type=checkbox\n  data-def={def}\n  data-force={force}\n  data-checked={checked}\n  checked={(!checked && checked !== false) ? def : checked}\n  readonly={tristate ? (!checked && checked !== false) : force}\n  disabled={force}\n  on:change={change}\n  />\n\n","<script>\n  import { version } from '../package.json';\n  import { getContext } from 'svelte';\n  import { get } from 'svelte/store';\n  import { cleanObject, reduceToObject } from './utils.js';\n  import { routeDeclare } from './route.js';\n  import InputNumber from './controls/InputNumber.svelte';\n  import InputSelect from './controls/InputSelect.svelte';\n  import InputDurationMin from './controls/InputDurationMin.svelte';\n  import InputCheckbox from './controls/InputCheckbox.svelte';\n\n  export let settings;\n  export let settings_opened = false\n\n  let componentNames = Object.keys(getContext('App-components'))\n\n  let def = {\n    cubeprice: 1440,\n    cubemargin: 135,\n    porte_type: 'contre-profil',\n    postes_estimations: [],\n  }\n\n  let ui = {}\n  settings.subscribe(settings => {\n    ui = settings\n  })\n\n  $: ui = {\n    postes_estimations: [],\n    ...ui\n  }\n\n  let merged = {}\n  $: merged = {\n    ...def,\n    ...cleanObject(ui),\n  }\n  $: settings.set(merged)\n\n  let root_element;\n  routeDeclare((route) => {\n    settings_opened = route.settings\n    return route.settings ? [root_element] : []\n  })\n\n  function addEstim(){\n    let estimName = prompt(\"Quel nom donner à l'estimation :\")\n    if(estimName) ui.postes_estimations = [...ui.postes_estimations, {\n      name: estimName,\n      value: 0,\n      indice: 'constant',\n      components: componentNames.reduce((h,c) => (h[c]=true, h), {}),\n    }]\n    console.log(ui.postes_estimations)\n  }\n\n  function removeEstim(idx){\n    ui.postes_estimations.splice(idx, 1)\n    ui.postes_estimations = ui.postes_estimations\n  }\n\n  function renameEstim(idx){\n    let poste = ui.postes_estimations[idx]\n    let newName = prompt(`Renommer la phase \"${poste.name}\" en :`, poste.name)\n    if(!newName) return;\n    ui.postes_estimations[idx].name = newName\n  }\n\n  function availableComp(ui, idx) {\n    return componentNames.filter(c => ui.postes_estimations[idx].components[c])\n  }\n\n  function open(){\n    let input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file')\n    input.addEventListener('change', (e) => {\n      let file = e.target.files[0];\n      if (!file) return\n\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        let data = JSON.parse(e.target.result)\n        if(data.settings) settings.set(data.settings)\n      }\n      reader.readAsText(file);\n    }, false)\n\n    document.body.appendChild(input);\n    input.click();\n    document.body.removeChild(input);\n  }\n</script>\n\n<style>\n  .estim label {\n    display: inline\n  }\n</style>\n\n<div class=\"routable\" bind:this={root_element}>\n  <button on:click={(e) => window.location.hash = '#/'}>Fermer</button>\n  <p><small>(version {version})</small></p>\n  <hr/>\n  <label>\n    <span>Type de porte : </span>\n    <InputSelect def={def.porte_type} bind:value={ui.porte_type}>\n      <option value=\"tenon-mortaise\">tenon et mortaise</option>\n      <option value=\"contre-profil\">contre profil</option>\n      <option value=\"onglet\">coupe d'onglet</option>\n    </InputSelect>\n  </label>\n  <hr/>\n\n  <label><span>Prix du bois : </span><InputNumber bind:value={ui.cubeprice} def={def.cubeprice} min=0/> €</label>\n  <label><span>Marge de cubage : </span><InputNumber bind:value={ui.cubemargin} def={def.cubemargin} min=0/> %</label>\n\n  <h2>Postes</h2>\n  <table class=\"estim\">\n    <tr>\n      <th>Nom</th>\n      <th>Temps (min)</th>\n      <th>Indice</th>\n      <th>&nbsp;</th>\n      {#each componentNames as comp}\n        <th>{comp}</th>\n      {/each}\n    </tr>\n    {#each merged.postes_estimations as estim, idx}\n      <tr>\n        <td>{estim.name} :</td>\n        <td><InputDurationMin bind:value={ui.postes_estimations[idx].value} /></td>\n        <td>\n          <select bind:value={ui.postes_estimations[idx].indice}>\n            <option value=\"\">(désactivé)</option>\n            <optgroup label=\"par opération...\">\n              <option value=\"constant\">une fois pour toutes</option>\n              <option value=\"per_component\">par élément ({availableComp(ui, idx).join(', ')})</option>\n              <option value=\"per_ferrage_charniere\">par ferrage de charnières</option>\n              <option value=\"tenon\">par tenon</option>\n            </optgroup>\n            <optgroup label=\"par type de pièce...\">\n              <option value=\"m2_trav_mont_cp\">par m² de montants ou traverses à contre-profil</option>\n              <option value=\"m2_trav_mont_ncp\">par m² de montants ou traverses (sauf contre-profil)</option>\n              <option value=\"m2_trav_mont\">par m² de montants ou traverses (tous)</option>\n              <option value=\"m2_panneau\">par m² de panneaux montés en rainure</option>\n              <option value=\"m2_panneau_seul\">par m² de panneaux libres</option>\n              <option value=\"m2_panneau_tous\">par m² de panneaux (tous)</option>\n              <option value=\"m2_cote\">par m² de côtés de tiroir</option>\n              <option value=\"m2_plateau\">par m² (toutes pièces)</option>\n              <option value=\"nb_trav_mont_cp\">par nombre de montants ou traverses à contre-profil</option>\n              <option value=\"nb_trav_mont_ncp\">par nombre de montants ou traverses (sauf contre-profil)</option>\n              <option value=\"nb_trav_mont\">par nombre de montants ou traverses (tous)</option>\n              <option value=\"nb_panneau\">par nombre de panneaux montés en rainure</option>\n              <option value=\"nb_panneau_seul\">par nombre de panneaux libres</option>\n              <option value=\"nb_panneau_tous\">par nombre de panneaux (tous)</option>\n              <option value=\"nb_cote\">par nombre de côtés de tiroir</option>\n              <option value=\"nb_plateau\">par nombre total de pièces</option>\n            </optgroup>\n            <optgroup label=\"par épaisseur...\">\n              <option value=\"m2_ep0_20\">par m² de panneau (ep ⩽ 20)</option>\n              <option value=\"m2_ep20_plus\">par m² de pièces (ep &gt; 20)</option>\n              <option value=\"nb_ep0_20\">par panneau (ep ⩽ 20)</option>\n              <option value=\"nb_ep20_plus\">par nombre de pièces (ep &gt; 20)</option>\n            </optgroup>\n          </select>\n        </td>\n        <td>\n          <button on:click={e => removeEstim(idx)}>🗑</button>\n          <button on:click={e => renameEstim(idx)}>✎</button>\n        </td>\n        {#each componentNames as comp}\n          <td>\n            <label>\n              <InputCheckbox bind:checked={ui.postes_estimations[idx].components[comp]} title={comp}/>\n              {comp.substr(0,2)}\n            </label>\n          </td>\n        {/each}\n      </tr>\n    {/each}\n    <li><button on:click={e => addEstim()}>Ajouter un poste</button></li>\n  </table>\n\n  <hr/>\n  <button on:click={(e) => window.location.hash = '#/'}>Fermer</button>\n  <button on:click={open}>Ouvrir...</button>\n  <details>\n    <summary>Contenu des préférences</summary>\n    <pre>{JSON.stringify(merged, null, 2)}</pre>\n  </details>\n</div>\n","<script>\n  import { routeInfo } from './route.js';\n\n  export let data = {};\n  export let path = '0';\n\n  let selected = false\n\n  function onHashChange(){\n    const route = routeInfo(window.location.hash)\n    selected = (route.component_selector === `#component-${path}`)\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n</script>\n\n<style>\n  .selected {\n    font-weight: bold;\n  }\n</style>\n\n<a href=\"#/component/{path}\" class:selected={selected}>{data.type} {data.name}</a>\n{#if data.children}\n<ul>\n  {#each data.children as child}\n  {#if child.type}\n  <li>\n    <svelte:self path=\"{path}-{child.id}\" data={child} />\n  </li>\n  {/if}\n  {/each}\n</ul>\n{/if}\n","<script>\n  import { routeInfo } from './route.js';\n\n  export let data = {};\n  export let path = '0';\n  export let prefix = '';\n  export let indent = \"\\u2003\"; // &emsp;\n\n  let selected = false\n\n  function onHashChange(){\n    const route = routeInfo(window.location.hash)\n    selected = (route.component_selector === `#component-${path}`)\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n</script>\n\n<option value=\"#/component/{path}\" class:selected={selected} selected={selected ? 'selected' :\n''}>{prefix}{data.type} {data.name}</option>\n{#if data.children}\n  {#each data.children as child}\n  {#if child.type}\n    <svelte:self path=\"{path}-{child.id}\" data={child} prefix={prefix + indent} indent={indent}/>\n  {/if}\n  {/each}\n{/if}\n","<script>\n  export let piece;\n  export let pos;\n\n  let polyline\n\n  $: polyline = piece.projection_polyline(pos).map(co => co.join(',')).join(' ')\n</script>\n<style>\n  rect.outline {\n    fill: rgb(255,255,255);\n    fill-opacity: 0.5;\n    stroke-width: 1;\n    stroke:rgb(0,0,0);\n  }\n</style>\n\n<polyline class=\"outline\" points={polyline} fill=none stroke=black data-name={piece.name} />\n","<script>\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n\n  export let item;\n  export let pos;\n</script>\n\n{#if item.type == 'Piece' }\n  <SVGPiece piece={item} pos={pos} />\n{:else if item.type == 'Group' }\n  <g transform=\"translate({item.projection_position(pos)[0]}, {item.projection_position(pos)[1]})\" data-name={item.name}>\n  {#each item.pieces as p}\n    <svelte:self item={p} pos={pos} />\n  {/each}\n  </g>\n{:else}\n  { console.warn(\"Unknown item.type for\", item) }\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n  let containerElement\n\n/*\n  // Credits: https://github.com/peter-hartmann/jscad-render-ts/blob/master/src/index.ts\n  import makeViewer from '@jscad/csg-viewer'\n  import scadApi from '@jscad/scad-api'\n\n  export let item\n\n  let containerElement\n\n  const viewerOptions = {\n    background: [0.211, 0.2, 0.207, 1], // [1, 1, 1, 1],//54, 51, 53\n    meshColor: [0.4, 0.6, 0.5, 1],\n    grid: {\n      display: true,\n      color: [0, 1, 1, 0.1]\n    },\n    camera: {\n      position: [45, 55, 70]\n    },\n    controls: {\n      limits: {\n        maxDistance: 1600,\n        minDistance: 0.01\n      },\n      autoRotate: {\n        enabled: true,\n      }\n    }\n  }\n\n  onMount(() => {\n    const scenes = [];\n    const gggg = {\n      scenes,\n      csgViewer: null,\n    };\n\n    scenes[0] = () => {\n      var scene = function () {\n        const { cube, sphere, torus } = scadApi.primitives3d\n        const { difference, union } = scadApi.booleanOps\n        const solid1 = cube({ size: 15, center: true })\n        const solid2 = sphere({ r: 10, fn: 100, type: 'geodesic' })\n        const result = difference(solid1, solid2)\n        return union(result, torus({ ri: 3, ro: 10 }))\n      }();\n      scenes[0] = () => scene;\n      return scene;\n    }\n\n    function rnd(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    scenes[1] = function () {\n      const { cube, sphere, torus } = scadApi.primitives3d\n      const { difference, union, intersection } = scadApi.booleanOps\n      const { translate } = scadApi.transformations\n      const ops = [\n        difference,\n        union,\n        intersection,\n      ]\n      const obs = [\n        () => cube({ size: 15, center: true }),\n        () => sphere({ r: 10, fn: 50, type: 'geodesic' }),\n        () => torus({ ri: 3, ro: 10 }),\n      ];\n      let result = cube({ size: 15, center: true })\n      const n = 10\n      for (let i = 0; i < n; i++) {\n        const ob = obs[i % obs.length]()\n        const op = ops[i % ops.length]\n        result = op(result, translate([rnd(-10, 10) + n, rnd(-10, 10) + n, rnd(-10, 10) + n], ob))\n      }\n      return result\n    }\n\n    const { csgViewer, viewerDefaults, viewerState$ } = makeViewer(containerElement, viewerOptions)\n    csgViewer(viewerOptions, { solids: scenes[1]() })\n    gggg.csgViewer = csgViewer;\n\n    function viewSceneN(i){\n      gggg.csgViewer({}, { solids: gggg.scenes[i]() })\n    }\n  })\n*/\n</script>\n\n<canvas\n  bind:this={containerElement}></canvas>\n","<script>\n  import SVGItem from '../pieces/SVGItem.svelte';\n  import JSCADView from '../pieces/JSCADView.svelte';\n\n  export let pieces;\n  export let zoom = 0.25;\n  export let name = pieces.name || \"Dessin\"\n\n  let mode = '2d'\n\n  function setMode(m) {\n    mode = m\n  }\n\n  $: pieces_list = (pieces instanceof Array) ? pieces : pieces.individual()\n\n  let svgElement;\n\n  $: [xmax, ymax, zmax] = pieces_list\n    .map(p => p.bounding_box())\n    .map(b => [b.xmax, b.ymax, b.zmax])\n    .reduce((b0, b1) => [Math.max(b0[0], b1[0]), Math.max(b0[1], b1[1]), Math.max(b0[2], b1[2])], [0, 0, 0])\n\n  function save(){\n    let markup = svgElement.outerHTML\n    // TODO: detect filename\n    let filename = (prompt(\"Nom du fichier :\", name) || \"dessin\") + \".svg\"\n\n    let file = new window.File([markup], filename, {\n      type: 'image/svg+xml'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n</script>\n\n<h3>{name}</h3>\n\n{#if mode == '3d'}\n<p>\n  <a href=\"javascript:void(0)\" on:click={e => setMode('2d')}>2D</a>\n</p>\n<JSCADView item={pieces_list} />\n{/if}\n\n{#if mode == '2d'}\n<p>\n  <a href=\"javascript:void(0)\" on:click={e => setMode('3d')}>3D</a><br/>\n  Zoom : <input type=range bind:value={zoom} min=0 max=1 step=.05> {zoom*100} %\n  <br/>\n  <a href=\"javascript:void(0)\" on:click={save}>Enregistrer image</a>\n</p>\n<svg\n    bind:this={svgElement}\n    data-count={pieces_list.length}\n    width=\"{5 + zoom*xmax + 5 + zoom*zmax + 5}\"\n    height=\"{5 + zoom*ymax + 5 + zoom*zmax + 5}\">\n  <g transform=\"translate(5, {5 + zoom*ymax}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"xy\" />\n    {/each}\n  </g>\n  <g transform=\"translate({5 + zoom*xmax + 10}, {5 + zoom*ymax}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"zy\" />\n    {/each}\n  </g>\n  <g transform=\"translate(5, {5 + zoom*(ymax) + 5}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"xZ\" />\n    {/each}\n  </g>\n</svg>\n{/if}\n","export function get_position(pos){\n  switch(pos){\n    case 'left':   case 'l': case 'gauche':  case 'ga': case 'zy': case 'x': return 'zy';\n    case 'right':  case 'r': case 'droite':  case 'dr': case 'Zy': case 'X': return 'Zy';\n    case 'top':    case 't': case 'haut':    case 'h':  case 'xZ': case 'y': return 'xZ';\n    case 'bottom': case 'b': case 'bas':                case 'xz': case 'Y': return 'xz';\n    case 'front':  case 'F': case 'avant':   case 'av': case 'xy': case 'z': return 'xy';\n    case 'back':   case 'B': case 'arrière': case 'ar': case 'Xy': case 'Z': return 'Xy';\n    default: throw `Unknown position ${pos}`\n  }\n}\n\nexport function get_orient(orient){\n  switch(orient){\n    case 'xyz': case 'xzy':\n    case 'yxz': case 'yzx':\n    case 'zxy': case 'zyx':\n      return orient\n    default:\n      throw `Unknown orient ${orient}`\n  }\n}\n\n","import { get_position } from './utils.js';\n\nexport default class Group {\n\n  constructor(pieces, name, component_type) {\n    this.component_type = component_type\n    this.type   = 'Group'\n    this.pieces = pieces || []\n    this.name   = name\n    this.x = 0\n    this.y = 0\n    this.z = 0\n    this.features = []\n  }\n\n  individual() {\n    return this.pieces.reduce((res, p) => res.concat(p.individual().map(p => p.prefix_name(this.name))), [])\n  }\n\n  shallow(){\n    return this.update({ pieces: this.pieces.filter(p => !(p instanceof Group)) })\n  }\n\n  flat_groups(nameprefix, total) {\n    let groups = []\n    let pieces = []\n    for(let p of this.pieces) {\n      if(p instanceof Group) {\n        groups = groups.concat(p.flat_groups(`${nameprefix || ''}${this.name} `))\n      } else {\n        pieces.push(p)\n      }\n    }\n    groups = [\n      this.update({\n        pieces: pieces,\n        name: `${nameprefix || ''}${this.name}`}),\n    ].concat(groups)\n\n    if (total) {\n      groups.push(this.update({\n        pieces: this.individual(),\n        name: `${nameprefix || ''}Total ${this.name}`}))\n    }\n\n    return groups\n  }\n\n  surface() {\n    return this.pieces.reduce((s,p) => s + p.surface(), 0)\n  }\n\n  get nombre_tenons(){\n    return this.pieces.reduce((n, p) => n + p.nombre_tenons, 0)\n  }\n\n  update(props) {\n    return this.update_new({...this, ...props})\n  }\n\n  update_new(props) {\n    return Object.assign(Object.create(Group.prototype), props)\n  }\n\n  add_pieces(pieces) {\n    return this.update({pieces: [...this.pieces, ...pieces]})\n  }\n\n  position(x, y, z){\n    return this.update({\n      'x': (x || x == 0) ? x : this.x,\n      'y': (y || y == 0) ? y : this.y,\n      'z': (z || z == 0) ? z : this.z,\n    })\n  }\n\n  get largeur() {\n    let bb = this.bounding_box()\n    return bb.xmax - bb.xmin\n  }\n\n  get hauteur() {\n    let bb = this.bounding_box()\n    return bb.ymax - bb.ymin\n  }\n\n  get profondeur() {\n    let bb = this.bounding_box()\n    return bb.zmax - bb.zmin\n  }\n\n  bounding_box(){\n    let keys = {\n      xmin: Math.min,\n      ymin: Math.min,\n      zmin: Math.min,\n      xmax: Math.max,\n      ymax: Math.max,\n      zmax: Math.max,\n    }\n    let res = this.pieces\n      .map(p => p.bounding_box())\n      .reduce((bounds, piece) => bounds === null ? piece : (\n        Object.keys(keys).reduce((res, key) => ({...res, [key]: keys[key](bounds[key], piece[key])}), {})\n      ), null) || {}\n    return {\n      xmin: this.x + (res.xmin || 0),\n      xmax: this.x + (res.xmax || 0),\n      ymin: this.y + (res.ymin || 0),\n      ymax: this.y + (res.ymax || 0),\n      zmin: this.z + (res.zmin || 0),\n      zmax: this.z + (res.zmax || 0),\n    }\n  }\n\n  // axis := 'x' | 'y' | 'z' | 'X' | 'Y' | 'Z'\n  // returns [translation] (negated if axis is uppercase)\n  dim(axis){\n    let sign = (axis == axis.toLowerCase()) ? 1 : -1;\n    axis = axis.toLowerCase()\n    return [sign * this[axis]]\n  }\n\n  projection_position(pos){\n    pos = get_position(pos)\n    return [this.dim(pos[0]), -this.dim(pos[1])]\n  }\n\n  // add features to the piece if they do not exist yet\n  // example: group.add_features(\"porte-facade\")\n  add_features() {\n    return this.update({\n      features: [...this.features, ...Array.from(arguments, x => x && !this.features.includes(x))],\n    })\n  }\n\n  count_features() {\n    return this.pieces\n      .map(piece => piece.count_features(...arguments))\n      .reduce((res,counts) => {\n        for(let feat in counts) {\n          res[feat] = (res[feat] || 0) + counts[feat]\n        }\n        return res;\n      }, this.features)\n  }\n}\n","<script>\n/*\ndata flow:\n\n- root component pass data to child initdata\n- in child:  data = {...initdata, opt, ui, children}\n- child comp pass data to Component\n- when child data changes, Component fires datachange to root\n- child Component pass data.children[i] to grandchild initdata\n- when data changes in grandchild comp, child Component set it to children\n- children is passed from Component to child element\n- child element recomputes data\n- child Component pass updated data to parent\n\n*/\n\n  import { getContext, setContext, createEventDispatcher } from 'svelte';\n  import { routeDeclare } from './route.js';\n  import { nextId } from './utils.js';\n\n  const dispatch = createEventDispatcher();\n  let components = getContext('App-components')\n\n  export let data\n  export let state = {}\n  export let childrenState = []\n  export let children = data.children || []\n  export let path = `${getContext('Component-path')}-${data.id}`\n  export let multi_drawings = false\n\n  /*\n  $: console.log(`Component ${data.type}(${path}) data =`, data)\n  $: console.log(`Component ${data.type}(${path}) state =`, state)\n  $: console.log(`Component ${data.type}(${path}) childrenState =`, childrenState)\n  $: console.log(`Component ${data.type}(${path}) children =`, children)\n  $: console.log(`Component ${data.type}(${path}) path =`, path)\n  */\n\n  setContext('Component-path', path)\n\n  dispatch('datachange', {data, state})\n  //$: dispatch('datachange', {data})\n  //$: dispatch('datachange', {state})\n  //$: console.log(`${data.type}(${path}) datachange!`), dispatch('datachange', {state, data})\n  $: dispatchDatachange(state, data)\n\n  function dispatchDatachange(state, data){\n    //console.log(`${data.type}(${path}) datachange!`)\n    dispatch('datachange', {state, data})\n  }\n\n  function renameChild(i){\n    let name = prompt(`Renommer \"${children[i].name}\" en :`, children[i].name) || children[i].name\n    children[i].name = name\n  }\n\n  function deleteChild(i){\n    if(!confirm(`Supprimer ${children[i].name} (#${i}) ?`)) return\n    let children2 = [...children]\n    children2.splice(i, 1)\n    console.log(\"delete\", i, children, children2)\n    children = children2\n  }\n\n  function onDataChange(e, i){\n    //console.log(`${data.type}(${path}).children[${i}] datachange{${Object.keys(e.detail).join()}} = %o`, e.detail);\n    if(e.detail.data)  children[i] = e.detail.data\n    if(e.detail.state) childrenState[i] = e.detail.state\n  }\n\n  // manually set target class because when svelte modified an element class\n  // list, it removes any manually set classes with the classList API.\n  let target = false\n  routeDeclare(route => {\n    target = (route.component_path == path)\n  })\n\n  function addChild(type){\n    let id = nextId(children)\n    let name = prompt(\"Nom du sous-ensemble :\", `${path}-${id}`) || `${path}-${id}`\n    children = [...children, {\n      type: type,\n      name: name,\n      id:   id\n    }]\n  }\n\n</script>\n\n<style>\n  .debug{\n    display: none;\n  }\n  .component.target, .component:target {\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .component-grid {\n    flex: 1 1 auto;\n    height: 100%;\n    overflow: auto;\n  }\n\n  @media print {\n    .component, .component-grid, .component-grid > * {\n      display: block !important;\n      overflow: visible !important;\n    }\n  }\n</style>\n\n<div class=\"routable component\" class:target={target} id=\"component-{path}\">\n  <div class=\"component-grid\">\n    <div>\n      <button on:click={e => addChild('Porte')}>Nouvelle porte</button>\n      <button on:click={e => addChild('Caisson')}>Nouveau caisson</button>\n      <button on:click={e => addChild('Etagere')}>Nouvelle étagère</button>\n      <button on:click={e => addChild('Plinthe')}>Nouvelle plinthe</button>\n      <button on:click={e => addChild('Facade')}>Nouvelle façade</button>\n      <button on:click={e => addChild('Tiroir')}>Nouveau tiroir</button>\n      <button on:click={e => addChild('Ensemble')}>Nouveau sous-ensemble</button>\n    </div>\n\n    <div class=\"component-grid-plan\">\n      <slot name=\"plan\"></slot>\n    </div>\n    <div class=\"component-grid-dim\">\n      <slot name=\"dim\"></slot>\n    </div>\n    <div class=\"component-grid-main\">\n      <slot></slot>\n    </div>\n    <div class=\"component-grid-tables\">\n      <slot name=\"tables\"></slot>\n    </div>\n\n    <div class=\"component-grid-children\">\n      <slot name=\"children\"></slot>\n\n      {#if data.children && data.children.length}\n      <table>\n      {#each data.children as child, i}\n        {#if child.type}\n        <tr>\n          <td>\n            <a href=\"#/component/{path}-{child.id}\">{child.type} {child.name}</a>\n            <a href=\"@\" on:click|preventDefault={e => renameChild(i)}>✎</a>\n            <a href=\"@\" on:click|preventDefault={e => deleteChild(i)}>🗑</a>\n            {#if (child.source||[]).length > 0}\n              <em>(automatique : {child.source.join(\"-\")})</em>\n            {/if}\n          </td>\n        </tr>\n        {/if}\n      {/each}\n      </table>\n      {/if}\n\n      <button on:click={e => addChild('Porte')}>Nouvelle porte</button>\n      <button on:click={e => addChild('Caisson')}>Nouveau caisson</button>\n      <button on:click={e => addChild('Etagere')}>Nouvelle étagère</button>\n      <button on:click={e => addChild('Plinthe')}>Nouvelle plinthe</button>\n      <button on:click={e => addChild('Facade')}>Nouvelle façade</button>\n      <button on:click={e => addChild('Tiroir')}>Nouveau tiroir</button>\n      <button on:click={e => addChild('Ensemble')}>Nouveau sous-ensemble</button>\n    </div>\n\n    <div class=\"component-grid-debug\">\n      <slot name=\"debug\"></slot>\n    </div>\n  </div>\n  <details>\n    <summary>debug</summary>\n    <pre>{JSON.stringify(data, null, 2)}</pre>\n  </details>\n</div>\n\n\n{#if data.children && data.children.length}\n{#each data.children as child, i (child.id)}\n  <svelte:component\n    this={components[child.type]}\n    initdata={child}\n    on:datachange={e => onDataChange(e, i)}\n    path=\"{path}-{child.id}\" />\n{/each}\n{/if}\n","<script>\n  import { cleanObject } from './utils.js';\n  import InputNumber from './controls/InputNumber.svelte';\n  import InputCheckbox from './controls/InputCheckbox.svelte';\n  import Group from './pieces/Group.js';\n\n  export let children = []\n  export let childrenState = []\n  export let pieces = []\n  export let pieces_drawings = []\n  export let childrenPos\n  export let defaultChildrenPos = []\n  export let drawings = false\n\n  /*\n  $: console.log('ChildrenPositions children = ', children)\n  $: console.log('ChildrenPositions childrenState = ', childrenState)\n  $: console.log('ChildrenPositions pieces = ', pieces)\n  $: console.log('ChildrenPositions pieces_drawings = ', pieces_drawings)\n  $: console.log('ChildrenPositions childrenPos = ', JSON.stringify(childrenPos, null, 2))\n  $: console.log('ChildrenPositions defaultChildrenPos = ', defaultChildrenPos)\n  $: console.log('ChildrenPositions drawings = ', drawings)\n  //*/\n\n  let uiPos = []\n  $: uiPos = resizeChildrenPos(children)\n  $: childrenPos = uiPos\n\n  function resizeChildrenPos(children) {\n    return children\n      .map((_,i) => cleanObject(uiPos[i] || {}))\n      .map(c => ({...c, show: (c.show === null || c.show === undefined) ? true : c.show}))\n  }\n\n  $: pieces0 = children\n    .map((c, i) => {\n      const state = childrenState[i] || {}\n      return state.pieces_group || new Group(state.pieces || [], `${c.type} ${c.name}`, c.type)\n    })\n    .map((g, i) => {\n      let {x, y, z} = {\n        x: 0, y: 0, z: 0,\n        ...(defaultChildrenPos[i] || {}),\n        ...cleanObject(uiPos[i] || {}),\n      }\n      return g.position(x, y, z)\n    })\n\n  $: pieces_drawings = pieces0\n    .reduce((res, p, i) => {\n      let pos = {\n        d: 1,\n        show: true,\n        ...(defaultChildrenPos[i] || {}),\n        ...cleanObject(uiPos[i] || {})\n      }\n      let d = pos.d || 1;\n      if(pos.show) res[d-1] = [...(res[d-1] || []), p];\n      return res;\n    }, [])\n\n  $: pieces = pieces_drawings.reduce((res, d) => [...res, ...d], [])\n\n</script>\n\n{#if children.length > 0 }\n<table>\n  <tr>\n    <th style=\"text-align: left\" colspan=\"2\">Éléments (activer)</th>\n    <th style=\"text-align: right\">dimensions (L&nbsp;x&nbsp;h&nbsp;x&nbsp;p)</th>\n    {#if drawings}\n    <th style=\"text-align: right\" colspan=\"2\">n° dessin</th>\n    {/if}\n    <th style=\"text-align: right\">de la gauche</th>\n    <th style=\"text-align: right\">du bas</th>\n    <th style=\"text-align: right\">du mur</th>\n    <td></td>\n  </tr>\n{#each children as child, i}\n  {#if child.type}\n  <tr>\n    <td><InputCheckbox tristate={false} bind:checked={uiPos[i].show} /></td>\n    <td>{child.type} {child.name}</td>\n    <td style=\"text-align: right\">{(pieces0[i]||{}).largeur}x{(pieces0[i]||{}).hauteur}x{(pieces0[i]||{}).profondeur}</td>\n    {#if drawings}\n    <td><InputNumber bind:value={uiPos[i].d} def={(defaultChildrenPos[i]||{}).d || 1} min={1} /></td>\n    {/if}\n    <td><InputNumber bind:value={uiPos[i].x} def={(defaultChildrenPos[i]||{}).x || 0} /></td>\n    <td><InputNumber bind:value={uiPos[i].y} def={(defaultChildrenPos[i]||{}).y || 0} /></td>\n    <td><InputNumber bind:value={uiPos[i].z} def={(defaultChildrenPos[i]||{}).z || 0} /></td>\n    <td>mm</td>\n  </tr>\n  {/if}\n{/each}\n</table>\n{/if}\n\n","export function calculEstimations(settings, pieceg) {\n  let constants = {}\n  let components = pieceg.flat_groups('', false)\n    .map(group => calculShallowGroupEstimations(settings, group, constants))\n  let total = components.reduce((tot, poste) => tot + poste.total, 0)\n  return {components, total}\n}\n\nexport function calculShallowGroupEstimations(settings, group, constants) {\n  let type = group.component_type\n  let postes = (settings.postes_estimations || [])\n    .map((estim, estim_idx) => ({...estim, estim_idx}))\n    .filter(estim => estim.components[type])\n    .map(estim => ({\n      ...estim,\n      type,\n      ...calculEstimation(estim, group, constants, type),\n    }))\n    .map(estim => ({\n      computed: estim.value * estim.base_value,\n      ...estim\n    }))\n    .filter(estim => estim.computed != 0)\n  let total = postes.reduce((tot, poste) => tot + poste.computed, 0)\n  return {type, name: group.name, postes, total}\n}\n\nexport function calculEstimation(estim, pieceg, constants, type){\n  switch(estim.indice) {\n    case 'm2_ep0_20':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.epaisseur <= 20)\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_ep20_plus':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.epaisseur > 20)\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau_seul':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau-seul'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau_tous':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont_ncp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont_cp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant') || p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_cote':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('cote'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_plateau':\n      return {\n        base_value: pieceg.surface(),\n        base_unit: \"m²\",\n      }\n    case 'nb_ep0_20':\n      return {\n        base_value: pieceg.pieces.filter(p => p.epaisseur <= 20).length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_ep20_plus':\n      return {\n        base_value: pieceg.pieces.filter(p => p.epaisseur > 20).length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_panneau':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_panneau_seul':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau-seul'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_panneau_tous':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_trav_mont_ncp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_trav_mont_cp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_trav_mont':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant') || p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_cote':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('cote'))\n          .length,\n        base_unit: \"côté\",\n      }\n    case 'nb_plateau':\n      return {\n        base_value: pieceg.pieces.length,\n        base_unit: \"pièces\",\n      }\n    case 'tenon':\n      return {\n        base_value: pieceg.nombre_tenons,\n        base_unit: \"tenons\",\n      }\n    case 'constant':\n      let cst_key = `${type}/${estim.name}`\n      let val = constants[cst_key] ? 0 : 1\n      constants[cst_key] = true\n      return {\n        base_value: val,\n        base_unit: \"fois\",\n      }\n    case 'per_component':\n      return {\n        base_value: 1,\n        base_unit: type,\n      }\n    case 'per_ferrage_charniere':\n      return {\n        base_value: pieceg.features.includes('ferrage-charniere') ? 1 : 0,\n        base_unit: type,\n      }\n    default:\n      return {\n        base_value: 0,\n        base_unit: '',\n      }\n  }\n}\n","<script>\n  import { getContext } from 'svelte';\n  import { calculEstimations } from './estimation.js';\n\n  export let pieces;\n  export let estimations;\n  let onlyMins = false;\n\n  let settings\n  getContext('settings').subscribe(data => { settings = data })\n\n  $: estimations = calculEstimations(settings, pieces)\n\n  function temps(all_mins, onlyMins){\n    if (onlyMins) {\n      return `${all_mins.toFixed()} min`\n    } else {\n      let mins = all_mins % 60\n      let h = (all_mins-mins) / 60\n      return `${h.toFixed()} h ${mins.toFixed()} min`\n    }\n  }\n\n  function csv_line(line){\n    return line.map(x => `${x}`.replaceAll('\"', '\"\"')).map(x => `\"${x}\"`).join(',')\n  }\n\n  function save(){\n    let lines = []\n    let row = lines.length + 1\n\n    lines.push(csv_line([\"Indices\"]))\n    let indices_first_row = lines.length + 1\n    for(let poste of settings.postes_estimations) {\n      row = lines.length + 1\n      lines.push(csv_line([\n        \"\",\n        poste.name,\n        \"\", \"\",\n        poste.value, \"min\",\n        poste.indice, \"\",\n        `=CONCAT(TRUNC(E${row}/60), \"h \", TRUNC(MOD(E${row}, 60)), \"min\")`\n      ]))\n    }\n\n    row = lines.length + 1\n    let first_row = row\n\n    for(let estim_comp of estimations.components) {\n      lines.push(\"\")\n\n      row = lines.length + 1\n      lines.push(csv_line([\n        estim_comp.type,\n        estim_comp.name,\n        \"\", \"\", \"\", \"\",\n        `=SUBTOTAL(9;G${row+1}:G${row+estim_comp.postes.length})`, \"min\",\n        `=CONCAT(TRUNC(G${row}/60), \"h \", TRUNC(MOD(G${row}, 60)), \"min\")`\n      ]))\n\n      for(let estim of estim_comp.postes) {\n        row = lines.length + 1\n        lines.push(csv_line([\n          \"\",\n          `=B${estim.estim_idx+indices_first_row}`,\n          estim.base_value.toFixed(4), estim.base_unit,\n          `=E${estim.estim_idx+indices_first_row}`, `min / ${estim.base_unit}`,\n          `=C${row}*E${row}`, \"min\",\n          `=CONCAT(TRUNC(G${row}/60), \"h \", TRUNC(MOD(G${row}, 60)), \"min\")`\n        ]))\n      }\n    }\n\n    lines.push(\"\")\n\n    row = lines.length + 1\n    lines.push(csv_line([\n      \"Total\",\n      \"\",\n      \"\", \"\", \"\", \"\",\n      `=SUBTOTAL(9;G${first_row}:G${row-1})`, \"min\",\n      `=CONCAT(TRUNC(G${row}/60), \"h \", TRUNC(MOD(G${row}, 60)), \"min\")`\n      ]))\n\n    let csv = \"\\uFEFF\" + lines.join(\"\\n\")\n\n    let filename = (prompt(\"Nom du fichier :\", `estimation - ${name}`) || \"liste de débit\") + \".csv\"\n\n    let file = new window.File([csv], filename, {\n      type: 'text/csv'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n</script>\n\n<table class=\"large styled\">\n  <caption>Estimations pour {pieces.name} (afficher <label style=\"display:\n  inline\"><input bind:checked={onlyMins} type=checkbox /> les minutes\n  seulement</label>, <a href=\"javascript:void(0)\" on:click={save}>ouvrir dans un\n  tableur</a>)</caption>\n  {#each estimations.components as estim_comp}\n    <tr>\n      <th>{estim_comp.type}</th>\n      <th colspan=3>{estim_comp.name}</th>\n      <td><em>{temps(estim_comp.total, onlyMins)}</em></td>\n    </tr>\n    {#each estim_comp.postes as estim}\n      <tr>\n        <td></td>\n        <td>{estim.name}</td>\n        <td>{estim.base_value.toFixed(4)} {estim.base_unit}</td>\n        <td>{temps(estim.value, onlyMins)} / {estim.base_unit}</td>\n        <td>{temps(estim.computed, onlyMins)}</td>\n      </tr>\n    {/each}\n  {/each}\n  <tr>\n    <th colspan=4>Total</th>\n    <td>{temps(estimations.total, onlyMins)}</td>\n  </tr>\n</table>\n","<script>\n  import { getContext } from 'svelte';\n  import { reduceToObject } from './utils.js';\n  import Group from './pieces/Group.js';\n  import Estimation from './Estimation.svelte'\n\n  export let pieces = []\n  export let merge = true\n  export let estimations\n\n  let separer = true\n  let totaux = true\n  let par_epaiss = false\n  let par_type = true\n\n  function comparePieces(p1, p2) {\n    return (\n      (p1.epaisseur_plateau < p2.epaisseur_plateau) ?  1 :\n      (p1.epaisseur_plateau > p2.epaisseur_plateau) ? -1 :\n      (p1.longueur  < p2.longueur)  ?  1 :\n      (p1.longueur  > p2.longueur)  ? -1 :\n      (p1.largeur   < p2.largeur)   ?  1 :\n      (p1.largeur   > p2.largeur)   ? -1 : 0);\n  }\n\n  // Pièces, tableau non fusionné\n  $: pieces2 = pieces.pieces\n    .reduce((res, p) => res.concat(p.individual()), [])\n    .map((p) => (\n      (!p.piece) ? p : p.piece.update_new({\n        ...p.piece,\n        names: p.nom ? p.nom.split(' ') : p.piece.names,\n        que: quantite * (p.que || p.piece.que || 1),\n      })\n    ))\n    .sort(comparePieces)\n\n  // Pièces, tableau fusionné si merge == true\n  $: pieces3 = !merge ? pieces2 :\n    Object.values(pieces2.reduce((map, p) => (map[p.signature()] = [...(map[p.signature()] || []), p], map), {}))\n    .map(family => (\n      family.reduce((a, b) => (a == null ? b : a.merge(b)), null)\n    ))\n    .sort(comparePieces)\n\n  let cubeprice\n  let cubemargin\n  getContext('settings').subscribe(settings => {\n    cubeprice = settings.cubeprice\n    cubemargin = settings.cubemargin\n  })\n\n  $: total_cube = pieces3.map(p => p.que * p.cubage(cubemargin/100)).reduce((a, b) => (a+b), 0)\n  $: total_prix = pieces3.map(p => p.que * p.prix(cubeprice, cubemargin/100)).reduce((a, b) => (a+b), 0)\n\n  let statistics = []\n  $: statistics = calculStatistics(pieces, totaux)\n  $: statistics_epaisseurs = Object.keys(statistics\n    .reduce((h,x) => {x.epaisseurs.forEach(ep => h[ep.epaisseur] = true); return h}, {}))\n\n  function calculStatistics(total_group, totaux){\n    //console.log(\"calculStatistics!!!!\", total_group.individual().map(p => p.features))\n    return total_group\n      .flat_groups('', totaux)\n      .map(group => {\n        const pieces_par_epaisseur = group.pieces\n          .reduce((h, p) => ({...h, [p.epaisseur]: [...(h[p.epaisseur]||[]), p]}), {})\n        const stats_epaisseur = Object.keys(pieces_par_epaisseur)\n          .map((epaisseur) => ({\n            epaisseur: epaisseur,\n            nb_pieces: pieces_par_epaisseur[epaisseur].length,\n            surface: pieces_par_epaisseur[epaisseur].reduce((s,p) => s + p.surface(), 0)\n          }))\n        const {xmin, xmax, ymin, ymax, zmin, zmax} = group.bounding_box()\n        const panneaux = group.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n        //console.log(group.name, JSON.stringify(group.pieces.map(p => p.features)))\n        return {\n          name:        group.name,\n          dimension_x: xmax - xmin,\n          dimension_y: ymax - ymin,\n          dimension_z: zmax - zmin,\n          nb_tenons:   group.pieces.reduce((n, p) => n + p.nombre_tenons, 0),\n          nb_pieces:   group.pieces.length,\n          surface:     group.surface(),\n          epaisseurs:  stats_epaisseur,\n          nb_panneaux: panneaux.length,\n          m2_panneaux: panneaux.reduce((s,p) => s + p.surface(), 0),\n        }\n      })\n      .filter(stat => stat.nb_pieces > 0)\n  }\n\n  function save(){\n    let lines = [\n      [ \"Pièce\", separer ? \"Num\" : \"Qué\", \"long\", \"larg\", \"ep\",\n        \"Arrasement\", \"Surface (m²)\", \"epaisseur plateau\",\n        `Cubage (sans marge)`,\n        `Cubage (avec marge)`,\n        `Prix au m³`\n      ].map(x => `\"${x}\"`).join(','),\n      [ \"\", \"\", \"\", \"\", \"\",\n        \"\", \"\", \"\",\n        \"\",\n        `${cubemargin}%`,\n        cubeprice].map(x => `\"${x}\"`).join(','),\n    ]\n    if(separer) lines.push(\"\")\n    let row = lines.length + 1\n    for(let piece of pieces3) {\n      row = lines.length + 1\n      let data = [\n        piece.longueur, piece.largeur, piece.epaisseur,\n        piece.string_arrasement(),\n        `=C${row}*D${row}/1000000`,\n        piece.epaisseur_plateau,\n        `=${separer ? '' : `B${row}*`}G${row}*H${row}/1000`,\n        `=I${row}*$J$2`,\n        `=J${row}*$K$2`\n      ]\n      if(separer) {\n        var que = 1\n        for(name of piece.name_list) {\n          lines.push([name, que].concat(data).map(x => `\"${x}\"`).join(','))\n          que = `=B${row}+1`\n          row = lines.length + 1\n        }\n        lines.push(\"\")\n      } else {\n        lines.push([\n          piece.name, piece.que || 1,\n        ].concat(data).map(x => `\"${x}\"`).join(','))\n      }\n    }\n    row = lines.length + 1\n    lines.push([\n      \"Total\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n      `=SUM(I2:I${row-1})`,\n      `=SUM(J2:J${row-1})`,\n      `=SUM(K2:K${row-1})`\n    ].map(x => `\"${x}\"`).join(','))\n\n    let csv = \"\\uFEFF\" + lines.join(\"\\n\")\n\n    let filename = (prompt(\"Nom du fichier :\", `débit - ${name}`) || \"liste de débit\") + \".csv\"\n\n    let file = new window.File([csv], filename, {\n      type: 'text/csv'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n\n</script>\n\n<style>\n  input[size='5'] {\n    width: 6em;\n  }\n  input[size='3'] {\n    width: 4em;\n  }\n</style>\n\n<table class=\"large styled\">\n  <caption>Statistiques pour {pieces.name} (afficher <label style=\"display: inline\"><input bind:checked={totaux} type=checkbox /> totaux</label>, <label style=\"display: inline\"><input bind:checked={par_epaiss} type=checkbox /> par épaisseur</label>, <label style=\"display: inline\"><input bind:checked={par_type} type=checkbox /> par type</label>)</caption>\n  <tr>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Ensemble</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Dimensions</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Nombre de pièces</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Nombre de tenons</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Surface des pièces</th>\n    {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <th colspan=2>Pièces ép={ep}</th>\n      {/each}\n    {/if}\n    {#if par_type}\n      <th colspan=2>Panneaux</th>\n    {/if}\n  </tr>\n  {#if par_epaiss || par_type}\n  <tr>\n    {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <th>Nbre</th>\n        <th>m²</th>\n      {/each}\n    {/if}\n    {#if par_type}\n      <th>Nbre</th>\n      <th>m²</th>\n    {/if}\n  </tr>\n  {/if}\n  {#each statistics as stat}\n    <tr>\n      <td>{stat.name}</td>\n      <td>{stat.dimension_x} x {stat.dimension_y} x {stat.dimension_z}</td>\n      <td>{stat.nb_pieces}</td>\n      <td>{stat.nb_tenons}</td>\n      <td>{stat.surface.toFixed(6)}</td>\n      {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <td>{(stat.epaisseurs.find(e => e.epaisseur == ep)||{}).nb_pieces || 0}</td>\n        <td>{((stat.epaisseurs.find(e => e.epaisseur == ep)||{}).surface || 0).toFixed(6)}</td>\n      {/each}\n      {/if}\n      {#if par_type}\n        <td>{stat.nb_panneaux}</td>\n        <td>{stat.m2_panneaux.toFixed(6)}</td>\n      {/if}\n    </tr>\n  {/each}\n</table>\n\n<hr/>\n\n<table class=\"large styled\">\n  <caption>Liste de débit (<a href=\"javascript:void(0)\" on:click={save}>ouvrir dans un tableur</a>)</caption>\n  <tr>\n    <th>Pièce (<label style=\"display: inline\"><input bind:checked={separer} type=checkbox /> séparer</label>)</th>\n    <th>Qué</th>\n    <th>L x l x e</th>\n    <th>Arrasement</th>\n    <th>Surface (m²)</th>\n    <th>epaisseur plateau (mm)</th>\n    <th>Cubage<br/>(x<input type=number bind:value={cubemargin} size=3 min=100 step=5/>%)</th>\n    <th>Prix au m³<br/><input type=number bind:value={cubeprice} size=5 step=10/></th>\n  </tr>\n  {#each pieces3 as piece}\n  <tr>\n    <td>\n      {#if separer}\n        {#each piece.name_list as name, i}\n          {#if i != 0}<br/>{/if}\n          {name}\n        {/each}\n      {:else}\n        {piece.name}\n      {/if}\n    </td>\n    <td>{piece.que || 1}</td>\n    <td>{piece.string_dimentions()}</td>\n    <td>{piece.string_arrasement()}</td>\n    <td>{piece.largeur * piece.longueur / 1e6}</td>\n    <td>{piece.epaisseur_plateau}</td>\n    <td>{piece.que * piece.cubage(cubemargin/100).toFixed(9)}</td>\n    <td>{piece.que * piece.prix(cubeprice, cubemargin/100).toFixed(2)}</td>\n  </tr>\n  {/each}\n  <tr>\n    <td>Total</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td>{total_cube.toFixed(9)}</td>\n    <td>{total_prix.toFixed(2)}</td>\n  </tr>\n</table>\n\n<hr/>\n\n<Estimation pieces={pieces} bind:estimations={estimations} />\n\n","<script>\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import Group from '../pieces/Group.js';\n  import Component from '../Component.svelte';\n  import ChildrenPositions from '../ChildrenPositions.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n\n  export let name = null\n  export let path = '0'\n  export let initdata = {}\n  export let state = {}\n  let childrenState = []\n\n  let defaults = {\n    children: [],\n    childrenPos: [],\n    type: 'Ensemble',\n    id: 0,\n  }\n\n  let children = initdata.children\n  let childrenPos = initdata.childrenPos\n\n  // These two lines are causing an infinite loop (especially the childrenPos\n  // one). When the ChildrenPositions component below modifies the childrenPos\n  // property through its binding, both childrenPos and defaults are\n  // invalidated, although defaults was never modified. The solution is to hide\n  // to svelte the relationship between those two properties in a function.\n\n  //$: childrenPos = initdata.childrenPos\n  //$: children = initdata.children\n\n  $: initdataChanged(initdata)\n\n  function initdataChanged(initdata){\n    console.log(\"initdata changed\")\n    childrenPos = initdata.childrenPos\n    children = initdata.children\n  }\n\n  let data\n\n  //$: data = {\n  //  ...defaults,\n  //  name,\n  //  ...initdata,\n  //  childrenPos,\n  //  children,\n  //}\n\n  // Use updateData else svelte wrongly invalidates initdata (and others) when\n  // data is set.\n\n  $: updateData(defaults, name, initdata, childrenPos, children)\n  function updateData(defaults, name, initdata, childrenPos, children) {\n    data = {\n      ...defaults,\n      name,\n      ...initdata,\n      childrenPos,\n      children,\n    }\n  }\n\n  let pieces = []\n  let pieces_drawings = []\n\n  let zoom = 0.5;\n\n  //$: console.log(pieces_drawings)\n\n  function rename(){\n    data.name = prompt(`Renommer \"${data.name}\" en :`, data.name) || data.name\n  }\n\n</script>\n\n<Component bind:data={data} state={state} bind:children={children} bind:childrenState={childrenState} path={path} on:datachange multi_drawings={true}>\n  <div slot=\"plan\">\n    <h2>{data.type} {data.name} <a href=\"@\" on:click|preventDefault={rename}>✎</a></h2>\n    {#each pieces_drawings as pieces_d, i}\n      <div data-count={pieces.length}>\n        <SVGDrawing bind:zoom={zoom} pieces={pieces_d || []} name={`Dessin ${i+1}`} />\n      </div>\n    {/each}\n  </div>\n\n  <div slot=\"children\">\n    <ChildrenPositions\n      children={children}\n      childrenState={childrenState}\n      bind:childrenPos={childrenPos}\n      bind:pieces={pieces}\n      bind:pieces_drawings={pieces_drawings}\n      drawings={true} />\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Ensemble ${data.name}`, 'Ensemble')} />\n  </div>\n</Component>\n\n\n","<script>\n  export let dim = []\n  export let zoom = 1\n  export let suffix = ''\n  export let pos = 'top'\n  export let x = 0\n  export let y = 0\n\n  $: rotate =\n    (pos == 'left') ? 'rotate(-90)' :\n    ''\n  $: reverse =\n    (pos == 'left') ? -1 :\n    1\n  $: dim2 = dim\n    .map(x => ({\n      row: 0,\n      text: '',\n      text_suffix: suffix,\n      ...x,\n      zstart: zoom * x.start * reverse,\n      zlength: zoom * x.length * reverse\n    }))\n</script>\n\n<g transform=\"translate({x}, {y}) {rotate}\">\n{#each dim2 as d}\n<circle\n  cx=\"{d.zstart}\"              cy=\"{20*d.row + 15}\"\n  r=\"2\"\n  stroke=\"black\"\n  stroke-width=\"1\"\n  fill=\"white\" />\n<circle\n  cx=\"{d.zstart+d.zlength}\"   cy=\"{20*d.row + 15}\"\n  r=\"2\"\n  stroke=\"black\"\n  stroke-width=\"1\"\n  fill=\"white\" />\n<text\n  x=\"{d.zstart+d.zlength/2}\"  y=\"{20*d.row + 13}\"\n  text-anchor=\"middle\"\n  font-size=\"10pt\"\n  >{d.text}{d.length}{d.text_suffix}</text>\n<line\n  x1=\"{d.zstart-5*reverse}\"            y1=\"{20*d.row + 15}\"\n  x2=\"{d.zstart+d.zlength+5*reverse}\" y2=\"{20*d.row + 15}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n<line\n  x1=\"{d.zstart}\"              y1=\"{20*d.row + 10}\"\n  x2=\"{d.zstart}\"              y2=\"{20*d.row + 19}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n<line\n  x1=\"{d.zstart+d.zlength}\"   y1=\"{20*d.row + 10}\"\n  x2=\"{d.zstart+d.zlength}\"   y2=\"{20*d.row + 19}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n{/each}\n</g>\n","import { get_position, get_orient } from './utils.js';\nimport { reduceToObject } from '../utils.js';\n\nexport default class Piece {\n\n  constructor() {\n    this.type       = 'Piece'\n    this.longueur   = 0\n    this.largeur    = 0\n    this.epaisseur  = 0\n    this.arrasement = 0\n    this.x          = 0\n    this.y          = 0\n    this.z          = 0\n    this.orient     = 'xyz'\n    this.names      = []\n    this.que        = 1\n    this.features   = []\n  }\n\n  update_if(cond, props) {\n    if(cond) return this.update(props);\n    else return this;\n  }\n\n  update(props) {\n    if (props.features && props.features.length == 1 && props.features[0] == true) {\n      console.log(\"WARNING: incorrect feature %o\", props)\n      throw new Exception()\n    }\n    return this.update_new({...this, props})\n  }\n\n  update_new(props) {\n    let res = Object.assign(Object.create(Piece.prototype), props)\n    if (res.features && res.features.length == 1 && res.features[0] == true) {\n      console.log(\"WARNING: incorrect feature %o\", res)\n      throw new Exception()\n    }\n    return res\n  }\n\n  get epaisseur_plateau() {\n    return (this.epaisseur <= 10) ? this.epaisseur + 3 :\n           (this.epaisseur <= 20 - 3) ? 20 :\n           (this.epaisseur <= 30 - 3) ? 30 :\n           (this.epaisseur <= 35 - 3) ? 35 :\n           (this.epaisseur <= 45 - 3) ? 45 :\n           this.epaisseur + 10;\n  }\n\n  get nombre_tenons(){\n    return (this.longueur_tenon1 ? 1 : 0) +\n           (this.longueur_tenon2 ? 1 : 0)\n  }\n\n  get name(){\n    return this.names.join(' ')\n  }\n\n  get name_list(){\n    return (this.names_list || [this.names]).map(n => n.join(' '))\n  }\n\n  set_name() {\n    return this.update_new({\n      ...this,\n      names: Array.from(arguments).filter(x => x),\n    })\n  }\n\n  add_name() {\n    return this.update_new({\n      ...this,\n      names: this.names.concat(Array.from(arguments).filter(x => x)),\n    })\n  }\n\n  prefix_name() {\n    return this.update_new({\n      ...this,\n      names: Array.from(arguments).filter(x => x).concat(this.names),\n    })\n  }\n\n  // add features to the piece if they do not exist yet\n  // example: group.add_features(\"traverse\", \"traverse-tenonee\")\n  add_features() {\n    return this.update_new({\n      ...this,\n      features: [...this.features, ...Array.from(arguments).filter(x => x && !this.features.includes(x))],\n    })\n  }\n\n  count_features() {\n    return Array.from(arguments,\n      feat => [feat, this.features.includes(feat) ? this.que : 0])\n      .reduce(reduceToObject(0, 1), {})\n  }\n\n  multiply_que(que){\n    return this.update_new({\n      ...this,\n      que: this.que * que\n    })\n  }\n\n  build_if(cond, longueur, largeur, epaisseur){\n    if(!cond) return this;\n    return this.build(longueur, largeur, epaisseur)\n  }\n\n  build(longueur, largeur, epaisseur) {\n    return this.update_new({\n      ...this,\n      arrasement:      longueur  || this.arrasement,\n      longueur:        longueur  || this.longueur,\n      largeur:         largeur   || this.largeur,\n      epaisseur:       epaisseur || this.epaisseur,\n    })\n  }\n\n  ajout_tenons(longueur_tenon1, longueur_tenon2) {\n    if(longueur_tenon2 === undefined) longueur_tenon2 = longueur_tenon1\n    return this.update_new({\n      ...this,\n      arrasement:      this.arrasement || this.longueur,\n      longueur:        this.longueur + longueur_tenon1 + longueur_tenon2,\n      longueur_tenon1: (this.longueur_tenon1 || 0) + longueur_tenon1,\n      longueur_tenon2: (this.longueur_tenon2 || 0) + longueur_tenon2,\n    })\n  }\n\n  usine_tenons(longueur_tenon1, longueur_tenon2) {\n    if(longueur_tenon2 === undefined) longueur_tenon2 = longueur_tenon1\n    return this.update_new({\n      ...this,\n      arrasement:      this.arrasement - longueur_tenon1 - longueur_tenon2,\n      longueur_tenon1: (this.longueur_tenon1 || 0) + longueur_tenon1,\n      longueur_tenon2: (this.longueur_tenon2 || 0) + longueur_tenon2,\n    })\n  }\n\n  //  rx  ry  rz    x   y   z     orienté comme\n  //\n  //  0   0   0     ep  la  Lo    traverse coté       la  ep  Lo    une traverse de haut/bas direction av/ar\n  //  0   0   1     la  ep  Lo    traverse bas av/ar  ep  la  Lo    une traverse de coté direction av/ar\n  //  0   1   0     Lo  la  ep    traverse de porte   Lo  ep  la    une traverse de haut/bas direction g/d\n  //  1   0   0     ep  Lo  la    montant coté        la  Lo  ep    un montant de porte\n  //\n  //  0   1   1     la  Lo  ep    montant porte       ep  Lo  la    un montant de coté\n  //  1   1   0     la  Lo  ep    montant porte       ep  Lo  la    un montant de coté\n  //  1   0   1     la  Lo  ep    montant porte       Lo  la  ep    une traverse de porte\n  //  1   1   1     Lo  la  ep    traverse de porte\n  //\n  //  rotation  x   y   z   comme\n  //            ep  la  Lo  traverse coté\n  //  x         ep  Lo  la  montant coté\n  //  y         Lo  la  ep  traverse de porte\n  //  z         la  ep  Lo  traverse horizontale av/ar\n  //  xy        la  Lo  ep  montant de porte\n  //  xz        Lo  ep  la  traverse horizontale g/d\n  //  yx        Lo  ep  la  traverse horizontale g/d\n  //  yz        la  Lo  ep  montant de porte\n  //  zx        la  Lo  ep  montant de porte\n  //  zy        Lo  ep  la  traverse horizontale g/d\n  //\n  //  orientation   x   y   z\n  //  xyz           Lo  la  ep    traverse de porte\n  //  xzy           Lo  ep  la    traverse horiz g/d\n  //  yxz           la  Lo  ep    montant de porte\n  //  yzx           ep  Lo  la    montant de coté\n  //  zxy           la  ep  Lo    traverse horiz av/ar\n  //  zyx           ep  la  Lo    traverse de coté\n  put(x, y, z, orient){\n    return this.update_new({\n      ...this,\n      'x':      x || this.x,\n      'y':      y || this.y,\n      'z':      z || this.z,\n      'orient': orient ? get_orient(orient) : this.orient,\n    })\n  }\n\n  // axis := 'x' | 'y' | 'z' | 'X' | 'Y' | 'Z'\n  // dim1 := 'longueur' | 'arrasement' | 'longueur_tenon1' | 'longueur_tenon2' | 0\n  // dim2 := 'largeur' | 0\n  // dim3 := 'epaisseur' | 0\n  // returns [translation, dimension] (negated if axis is uppercase)\n  dim(axis, dim1, dim2, dim3){\n    dim1 = dim1 == undefined ? 'longueur'  : dim1\n    dim2 = dim2 == undefined ? 'largeur'   : dim2\n    dim3 = dim3 == undefined ? 'epaisseur' : dim3\n    let sign = (axis == axis.toLowerCase()) ? 1 : -1;\n    axis = axis.toLowerCase()\n    let dims = [\n      dim1 == 0 ? 0 : this[dim1] || 0,\n      dim2 == 0 ? 0 : this[dim2] || 0,\n      dim3 == 0 ? 0 : this[dim3] || 0]\n    return [sign*this[axis], sign*dims[this.orient.indexOf(axis)]]\n  }\n\n  bounding_box(){\n    let [xmin, dx] = this.dim('x')\n    let [ymin, dy] = this.dim('y')\n    let [zmin, dz] = this.dim('z')\n    return {\n      dx, dy, dz,\n      xmin, ymin, zmin,\n      xmax: xmin + dx,\n      ymax: ymin + dy,\n      zmax: zmin + dz,\n    }\n  }\n\n  projection_polyline(pos){\n    pos = get_position(pos)\n    let [x, dx] = this.dim(pos[0])\n    let [y, dy] = this.dim(pos[1])\n    let [_1, t1x] = this.dim(pos[0], 'longueur_tenon1', 0, 0)\n    let [_2, t2x] = this.dim(pos[0], 'longueur_tenon2', 0, 0)\n    let [_3, t1y] = this.dim(pos[1], 'longueur_tenon1', 0, 0)\n    let [_4, t2y] = this.dim(pos[1], 'longueur_tenon2', 0, 0)\n    //console.log(this)\n    //console.log([pos, x, dx, y, dy])\n    //console.log([pos[0], this.orient.indexOf(pos[0]), t1x, t2x])\n    //console.log([pos[1], this.orient.indexOf(pos[1]), t1y, t2y])\n    let dx1  = Math.floor(dx/3)\n    let dx2 = dx - dx1\n    let dy1  = Math.floor(dy/3)\n    let dy2 = dy - dy1\n    return [\n      // t1y: tenon ou face du bas\n      [x+t1x,     y+t1y],\n      [x+dx1,     y+t1y],\n      [x+dx1,     y],\n      [x+dx2,     y],\n      [x+dx2,     y+t1y],\n      // t2x: tenon ou face de droite\n      [x+dx-t2x,  y+t1y],\n      [x+dx-t2x,  y+dy1],\n      [x+dx,      y+dy1],\n      [x+dx,      y+dy2],\n      [x+dx-t2x,  y+dy2],\n      // t2y: tenon ou face du haut\n      [x+dx-t2x,  y+dy-t2y],\n      [x+dx2,     y+dy-t2y],\n      [x+dx2,     y+dy],\n      [x+dx1,     y+dy],\n      [x+dx1,     y+dy-t2y],\n      // t1x: tenon ou face gauche\n      [x+t1x,     y+dy-t2y],\n      [x+t1x,     y+dy2],\n      [x,         y+dy2],\n      [x,         y+dy1],\n      [x+t1x,     y+dy1],\n      // fermeture de la figure\n      [x+t1x,     y+t1y],\n    ].map(c => [c[0], -c[1]])\n  }\n\n  string_arrasement(){\n    if (this.arrasement && this.arrasement != this.longueur) {\n      return this.arrasement\n    } else {\n      return ''\n    }\n  }\n\n  string_dimentions(){\n    return `${this.longueur} x ${this.largeur} x ${this.epaisseur}`\n  }\n\n  string_dimentions_plateau(){\n    return `${this.longueur} x ${this.largeur} x ${this.epaisseur_plateau}`\n  }\n\n  surface(){\n    return this.longueur * this.largeur * 1e-6\n  }\n\n  cubage(factor) {\n    return this.longueur * this.largeur * this.epaisseur_plateau * 1e-9 * (factor || 1)\n  }\n\n  prix(prix_cube, factor) {\n    return this.cubage(factor) * prix_cube\n  }\n\n  individual(){\n    return [this]\n  }\n\n  signature() {\n    return JSON.stringify(\n      Object.keys(this)\n        .sort()\n        .filter(k => (! ['names', 'names_list', 'x', 'y', 'z', 'orient', 'que'].includes(k)))\n        .map(k => [k, this[k]])\n        .reduce((a, b) => a.concat(b), []))\n  }\n\n  merge(other){\n    console.assert(this.signature() == other.signature())\n    return this.update_new({\n      ...this,\n      que:   (this.que || 1) + (other.que || 1),\n      names_list: [...(this.names_list||[this.names]), other.names],\n      names: this.names\n        .filter((n) => other.names.includes(n))\n        .concat(this.names.filter((n) => !other.names.includes(n) && !other.names.includes(`(${n})`)).map(x => x[0] == '(' ? x : `(${x})`))\n        .concat(other.names.filter((n) => !this.names.includes(n) && !this.names.includes(`(${n})`)).map(x => x[0] == '(' ? x : `(${x})`))\n    })\n  }\n}\n","<script>\n  import { onMount, getContext } from 'svelte';\n  import { cleanObject, pipeline } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import InputSelect from '../controls/InputSelect.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let settings\n  getContext('settings').subscribe(data => { settings = data })\n\n  let data = {...initdata}\n\n  let defaults = {\n    quantite: 1,\n    type:  'contre-profil',\n    largeur: 400,\n    hauteur: 600,\n    epaisseur: 22,\n    largeur_montants: 70,\n    largeur_traverses: 70,\n    profondeur_tenons: 30,\n    profondeur_rainure: 10,\n    profondeur_profil: 15,\n    encastree: false,\n    jeu_encastrement: 2,\n    jeu_rainure: 1,\n    epaisseur_panneau: 16,\n    inclure_panneau: true,\n    ferrage: 'charnieres',\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n\n  $: opt = pipeline(\n    {\n      ...defaults,\n      ...cleanObject({\n        type: settings.porte_type\n      }),\n      ...cleanObject(ui)\n    },\n    opt => ({\n      largeur_traverse_h: opt.largeur_traverses,\n      largeur_traverse_b: opt.largeur_traverses,\n      ...opt\n    }))\n\n  $: data.opt = opt\n  $: data.ui  = ui\n  let state = {}\n\n  let zoom = 0.25\n\n  $: jeu_encastrement = opt.encastree ? opt.jeu_encastrement : 0\n\n  $: montant = new Piece()\n    .add_name(\"Montant\")\n    .add_features(opt.type == 'contre-profil' ? 'montant-cp' : 'montant')\n    .build(opt.hauteur - 2*jeu_encastrement, opt.largeur_montants, opt.epaisseur)\n  $: montant_g = montant\n    .add_name(\"gauche\")\n    .put(jeu_encastrement, jeu_encastrement, 0, 'yxz')\n  $: montant_d = montant\n    .add_name(\"droit\")\n    .put(jeu_encastrement + opt.largeur - opt.largeur_montants, jeu_encastrement, 0, 'yxz')\n\n  $: traverse =\n    (opt.type == 'contre-profil')  ? new Piece()\n      .add_name(\"Traverse\")\n      .add_features('traverse-cp')\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_profil) - 2*jeu_encastrement,\n        0,\n        opt.epaisseur):\n    (opt.type == 'tenon-mortaise') ? new Piece()\n      .add_name(\"Traverse\")\n      .add_features('traverse')\n      .build(\n        opt.largeur - 2 * opt.largeur_montants - 2*jeu_encastrement,\n        0,\n        opt.epaisseur)\n      .ajout_tenons(opt.profondeur_tenons):\n    (opt.type == 'onglet') ? new Piece()\n      .add_name(\"Traverse\")\n      .add_features('traverse')\n      .build(opt.largeur, 0, opt.epaisseur):\n    new Piece();\n  $: traverse_xpos =\n    (opt.type == 'contre-profil')  ? opt.largeur_montants - opt.profondeur_profil:\n    (opt.type == 'tenon-mortaise') ? opt.largeur_montants - opt.profondeur_tenons:\n    (opt.type == 'onglet')         ? 0:\n    0;\n  $: traverse_h = traverse\n    .add_name(\"haut\")\n    .build(null, opt.largeur_traverse_h)\n    .put(jeu_encastrement + traverse_xpos, jeu_encastrement + opt.hauteur-opt.largeur_traverse_h, 0, 'xyz')\n  $: traverse_b = traverse\n    .add_name(\"bas\")\n    .build(null, opt.largeur_traverse_b)\n    .put(jeu_encastrement + traverse_xpos, jeu_encastrement, 0, 'xyz')\n  $: panneau = (\n    (opt.type == 'contre-profil')  ? new Piece()\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure) - 2*jeu_encastrement,\n        opt.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure)\n          - opt.largeur_traverse_h - opt.largeur_traverse_b\n          - 2*jeu_encastrement,\n        opt.epaisseur_panneau):\n    (opt.type == 'tenon-mortaise') ? new Piece()\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure),\n        opt.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure)\n          - opt.largeur_traverse_h - opt.largeur_traverse_b,\n        opt.epaisseur_panneau):\n    (opt.type == 'onglet') ? new Piece()\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure),\n        opt.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure)\n          - opt.largeur_traverse_h - opt.largeur_traverse_b,\n        opt.epaisseur_panneau):\n    new Piece())\n    .add_name(\"Panneau\")\n    .add_features('panneau')\n    .put(\n      jeu_encastrement + montant.largeur - opt.profondeur_rainure + opt.jeu_rainure,\n      jeu_encastrement + traverse_b.largeur - opt.profondeur_rainure + opt.jeu_rainure,\n      0,\n      'xyz')\n\n  $: pieces = [\n    opt.inclure_panneau ? panneau : null,\n    traverse_h, traverse_b,\n    montant_g, montant_d,\n  ].filter(x => x != null).map(p => p.multiply_que(opt.quantite))\n\n  $: state.pieces_group = new Group(pieces, `Porte ${data.name}`, 'Porte')\n    .add_features(`ferrage-${opt.ferrage}`)\n\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} state={state} path={path} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Porte ${data.name}`} />\n\n    <!--<img src=\"porte.svg\" />-->\n    <p>Zoom : <input type=range bind:value={zoom} min=0 max=1 step=.05> {zoom*100} %</p>\n    <svg\n        width=\"{zoom*opt.largeur + 25}\"\n        height=\"{zoom*opt.hauteur + 65}\">\n      <Cote zoom={zoom} x=20 y=0 dim={[\n          {\n            text: \"largeur: \",\n            start: 0,\n            length: opt.largeur,\n            row: 2,\n          },\n          {\n            text: \"lon. traverse: \",\n            start: traverse_h.x,\n            length: traverse_h.longueur,\n            row: 1,\n          },\n          {\n            start: montant_g.x,\n            length: montant_g.largeur,\n            row: 0,\n          },\n          {\n            start: montant_d.x,\n            length: montant_d.largeur,\n            row: 0,\n          }\n        ]} />\n      <Cote zoom={zoom} x=0 y=60 pos=left dim={[\n          {\n            text: \"hauteur: \",\n            start: 0,\n            length: opt.hauteur,\n            row: 0,\n          }\n        ]} />\n      <g transform=\"translate(20, {60 + zoom*opt.hauteur}) scale({zoom} {zoom})\">\n        {#each pieces as piece}\n          <SVGPiece piece={piece} pos=\"avant\" />\n        {/each}\n      </g>\n    </svg>\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <!-- buggy\n    <label><span>Quantité : </span><InputNumber min=1 bind:value={ui.quantite} def={defaults.quantite}/></label>\n    -->\n    <label>\n      <span>Ferrage : </span>\n      <InputSelect def={defaults.ferrage} bind:value={ui.ferrage} force={defaults.force_ferrage}>\n        <option value=\"aucun\">aucun</option>\n        <option value=\"charnieres\">charnières</option>\n      </InputSelect>\n    </label>\n    <label>\n      <span>Type : </span>\n      <InputSelect def={defaults.type} bind:value={ui.type}>\n        <option value=\"tenon-mortaise\">tenon et mortaise</option>\n        <option value=\"contre-profil\">contre profil</option>\n        <option value=\"onglet\">coupe d'onglet</option>\n      </InputSelect>\n    </label>\n    <label><span>Largeur   : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur   : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Épaisseur : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n    <hr/>\n    <label><span>Largeur montants : </span><InputNumber min=0 bind:value={ui.largeur_montants} def={defaults.largeur_montants}/> mm</label>\n    <label><span>largeur traverses : </span><InputNumber min=0 bind:value={ui.largeur_traverses} def={defaults.largeur_traverses}/> mm</label>\n    <label><span>largeur traverse haut : </span><InputNumber min=0 bind:value={ui.largeur_traverse_h} def={opt.largeur_traverses}/> mm</label>\n    <label><span>largeur traverse bas : </span><InputNumber min=0 bind:value={ui.largeur_traverse_b} def={opt.largeur_traverses}/> mm</label>\n    <hr/>\n    <label><span>Épaisseur panneau : </span><InputNumber min=0 bind:value={ui.epaisseur_panneau} def={defaults.epaisseur_panneau}/> mm</label>\n    <label><span>Profondeur rainures : </span><InputNumber min=0 bind:value={ui.profondeur_rainure} def={defaults.profondeur_rainure}/> mm</label>\n    <label><span>Jeu paneau / rainure : </span><InputNumber min=0 bind:value={ui.jeu_rainure} def={defaults.jeu_rainure}/> mm</label>\n    {#if opt.type == 'tenon-mortaise' }\n    <label><span>Profondeur tenons : </span><InputNumber min=0 bind:value={ui.profondeur_tenons} def={defaults.profondeur_tenons}/> mm</label>\n    {:else if opt.type == 'contre-profil' }\n    <label><span>Profondeur profil : </span><InputNumber min=0 bind:value={ui.profondeur_profil} def={defaults.profondeur_profil}/> mm</label>\n    {/if}\n    <label><span>Inclure le paneau</span><InputCheckbox bind:checked={ui.inclure_panneau} def={defaults.inclure_panneau} /></label>\n    <hr/>\n    <label><span>Encastrée</span><InputCheckbox bind:checked={ui.encastree} def={defaults.encastree} /></label>\n    <label><span>jeu encastrement (tout autour) : </span><InputNumber min=0 bind:value={ui.jeu_encastrement} def={defaults.jeu_encastrement}/> mm</label>\n    </form>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={state.pieces_group} />\n  </div>\n</Component>\n","<script>\n  import { cleanObject, pipeline, nextId } from '../utils.js';\n  import Component from '../Component.svelte';\n  import ChildrenPositions from '../ChildrenPositions.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputSelect from '../controls/InputSelect.svelte';\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  //\n  // Defaults\n  //\n\n  let defaults = {\n    type:  'contre-profil',\n    largeur: 400,\n    hauteur: 600,\n    profondeur: 300,\n    epaisseur_montants: 24,\n    epaisseur_traverses: 24,\n    largeur_montants: 50,\n    largeur_traverses: 50,\n    profondeur_tenons_cotes: 30,\n    profondeur_tenons: 20,\n    profondeur_rainure: 10,\n    jeu_rainure: 1,\n    epaisseur_panneau: 16,\n    panneau_dessus: true,\n    panneau_dessous: true,\n    montants_inter_longueur_tenon: 20,\n    separer_haut: false,\n    separer_bas: false,\n    hauteur_traverses_separees: 70,\n    montants: [\n      {\n      },\n      {\n      },\n    ],\n    colonnes: [\n      {\n        panneau_haut: true,\n        panneau_bas: true,\n        porte: {},\n        casiers: [\n          {\n            tiroir: false,\n            panneau_dessous: true,\n            panneau_dos: true,\n          },\n        ],\n      },\n    ],\n    ...initdata.defaults\n  }\n\n  //\n  // Internal state (recomputed)\n  //\n\n  let state = {}\n\n  let childrenState = []\n\n  //\n  // Option (internal state, saved)\n  //\n\n  let opt = { ...defaults, ...initdata.opt }\n\n  // Migrate\n  if (opt.profondeur_tenons_intermediaire) {\n    opt.profondeur_tenons_cotes = opt.profondeur_tenons\n    opt.profondeur_tenons = opt.profondeur_tenons_intermediaire\n    delete opt.profondeur_tenons_intermediaire\n  }\n  if (opt.hauteur_traverses) {\n    opt.largeur_traverses = opt.hauteur_traverse\n    delete opt.hauteur_traverses\n  }\n\n  //\n  // UI (visible state)\n  //\n\n  let ui  = {\n    ...(initdata.ui || initdata.opt),\n  }\n\n  let num_colonnes = Math.max(opt.colonnes.length, 1)\n\n  let largeur_colonnes = opt.colonnes.map(c => (c.largeur_definie ? c.largeur : null))\n  $: largeur_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => largeur_colonnes[i] || null)\n\n  let num_casiers_colonnes = opt.colonnes.map(c => (c.casiers || [{}]).length)\n  $: num_casiers_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => num_casiers_colonnes[i] || 1)\n\n  let hauteur_casiers_colonnes = opt.colonnes.map(c => (c.casiers || []).map(cas => cas.hauteur_definie ? cas.hauteur : null))\n  $: hauteur_casiers_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => (hauteur_casiers_colonnes[i] || []).slice(0, num_casiers_colonnes[i]))\n\n  let ui_colonnes = opt.colonnes\n  $: ui_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => (ui_colonnes[i] || {}))\n    .map((colonne, i) => {\n      return {\n        ...colonne,\n        porte: {\n          ...colonne.porte,\n        },\n        casiers: Array.from(Array(num_casiers_colonnes[i]).keys())\n          .map(j => ({\n            porte: {},\n            ...(colonne.casiers || [])[j],\n          }))\n      }\n    })\n\n  let ui_montants = opt.montants\n    .map(montant => ({\n      traverses: [],\n      ...montant,\n      panneaux_actifs: (montant.panneaux ||[]).map(p => p.actif)\n    }))\n\n  $: ui_montants = pipeline(\n      ui_montants.slice(0, ui_montants.length - 1),\n      m => Array(num_colonnes).fill(1).map((_, i) => m[i] || {panneaux_actifs:[]}),\n      m => m.concat([ui_montants[ui_montants.length-1]]))\n    .map(montant => ({\n      traverses: [],\n      ...montant,\n      panneaux_actifs: [...(montant.panneaux_actifs||[])]\n    }))\n\n  let selection_casier_input = '0,0'\n  $: [selection_casier_i, selection_casier_j] = selection_casier_input.split(',').map(n => parseInt(n))\n  $: selection_casier = { i: selection_casier_i, j: selection_casier_j, key: selection_casier_input}\n\n  //\n  // Update opt from ui\n  //\n\n  $: opt = pipeline(\n    {\n      ...defaults,\n      ...cleanObject({\n        ...ui,\n      }),\n    },\n    opt => updateSubdivisions(num_colonnes, opt),\n    opt => calculLargeurColonnes(largeur_colonnes, opt),\n    opt => calculColonnesCasiers(num_casiers_colonnes, hauteur_casiers_colonnes, ui_colonnes, opt),\n    opt => calculSubdivisionMontants(opt, ui_montants))\n\n  //\n  // Update children then data from opt\n  //\n\n  let childrenPos\n  $: childrenPos = initdata.childrenPos || {}\n  let children = data.children\n  $: children = calculEnfants(opt, children)\n\n  /*\n  $: console.log('Caisson.initdata = ', initdata)\n  $: console.log('Caisson.opt = ', opt)\n  $: console.log('Caisson.ui = ', ui)\n  $: console.log('Caisson.children = ', children)\n  $: console.log('Caisson.childrenPos = ', childrenPos)\n  $: console.log('Caisson.state = ', state)\n  */\n\n  $: data = {\n    ...initdata,\n    opt,\n    ui,\n    children,\n    childrenPos,\n  }\n\n  //\n  // Fonctions de calcul\n  //\n\n  function updateSubdivisions(num_colonnes, opt){\n    let opt2 = {...opt}\n    opt2.colonnes            = opt.colonnes.slice(0, num_colonnes)\n    opt2.montants            = pipeline(\n      opt.montants.slice(0, opt.montants.length-1),\n      m => Array(num_colonnes).fill(1).map((_, i) => m[i]),\n      m => m.concat([opt.montants[opt.montants.length-1]]))\n\n    for(let i = 0; i<=num_colonnes; i++) {\n      opt2.montants[i] = {\n        ...opt2.montants[i],\n      }\n      if (i >= num_colonnes) break;\n\n      opt2.colonnes[i] = {\n        panneau_haut: true,\n        panneau_bas: true,\n        largeur: null,\n        num_casiers: 1,\n        casiers: [\n          {\n            tiroir: false,\n            panneau_dessous: true,\n            panneau_dos: true,\n          }\n        ],\n        porte: {},\n        ...opt2.colonnes[i],\n      }\n    }\n    return opt2\n  }\n\n\n  function calculLargeurColonnes(largeurs, opt){\n    let cols = opt.colonnes.length\n    let espace_a_repartir = opt.largeur - (cols+1) * opt.epaisseur_montants\n    let largeurs_definies = largeurs.filter(x => (x && x != 0))\n    let cols_a_calculer = largeurs.length - largeurs_definies.length\n    let espace_reparti = largeurs_definies.reduce((a,b) => (a+b), 0)\n    let espace_restant = espace_a_repartir - espace_reparti\n    let espace_par_col = Math.floor(espace_restant / cols_a_calculer)\n    let colonnes = [...opt.colonnes]\n\n    for(let i = 0; i < cols; i++) {\n      if(largeurs[i] && largeurs[i] != 0) {\n        colonnes[i].largeur_definie = true\n        colonnes[i].largeur = largeurs[i]\n      } else if(cols_a_calculer == 1) {\n        colonnes[i].largeur_definie = false\n        colonnes[i].largeur = espace_restant\n        cols_a_calculer = 0\n        espace_restant = 0\n      } else {\n        colonnes[i].largeur_definie = false\n        colonnes[i].largeur = espace_par_col\n        espace_restant -= espace_par_col\n        cols_a_calculer -= 1\n      }\n    }\n\n    return {\n      ...opt,\n      colonnes: colonnes,\n    }\n  }\n\n  function calculColonnesCasiers(num_casiers_colonnes, hauteur_casiers_colonnes, ui_colonnes, opt){\n    let cols = opt.colonnes.length\n    let colonnes = []\n\n    for(let i = 0; i < cols; i++) {\n      let num = num_casiers_colonnes[i]\n      let ui_colonne = ui_colonnes[i]\n      let xpos = opt.epaisseur_montants * (i+1)\n        + opt.colonnes.slice(0, i).reduce((n, c) => n + c.largeur, 0)\n      colonnes[i] = pipeline(\n        opt.colonnes[i] || {},\n        col => ({\n          ...col,\n          xpos: xpos,\n          porte: {\n            ...col.porte,\n            ...ui_colonne.porte,\n          },\n          ...cleanObject({\n            panneau_haut: ui_colonne.panneau_haut,\n            panneau_bas: ui_colonne.panneau_bas,\n          })\n        }),\n        col => {col.casiers = (col.casiers || []).slice(0, num); return col},\n        col => calculCasiers(i, col, hauteur_casiers_colonnes[i], num, ui_colonne),\n        col => ({...col, casiers: calculPositionCasiers(col.casiers, xpos)}))\n    }\n\n    return {\n      ...opt,\n      colonnes: colonnes,\n    }\n  }\n\n  function calculCasiers(i, colonne, hauteurs, num, ui_colonne){\n    let espace_a_repartir = opt.hauteur - (num+1) * opt.epaisseur_traverses\n    let hauteurs_definies = hauteurs.filter(x => (x && x != 0))\n    let casiers_a_calculer = num - hauteurs_definies.length\n    let espace_reparti = hauteurs_definies.reduce((a,b) => (a+b), 0)\n    let espace_restant = espace_a_repartir - espace_reparti\n    let espace_par_casier = Math.floor(espace_restant / casiers_a_calculer)\n\n    for(let j = 0; j < num; j++) {\n      let ui_casier = ui_colonne.casiers[j]\n      //console.log(`fusion casier ${i+1},${j+1}`, colonne.casiers[j], ui_casier)\n      let casier = {\n        hauteur: null,\n        panneau_dessous: true,\n        panneau_dos: true,\n        tiroir: false,\n        num_etageres: 0,\n        ...colonne.casiers[j],\n        ...cleanObject(ui_casier),\n        porte: {\n          double: false,\n          facade: false,\n          type: \"\",\n          ...(colonne.casiers[j] || {}).porte,\n          ...cleanObject(ui_casier.porte || {}),\n        },\n      }\n      //console.log(`fusion casier ${i+1},${j+1} = `, casier)\n      if(hauteurs[j] && hauteurs[j] != 0) {\n        casier.hauteur_definie = true\n        casier.hauteur = hauteurs[j]\n      } else if(casiers_a_calculer == 1) {\n        casier.hauteur_definie = false\n        casier.hauteur = espace_restant\n        casiers_a_calculer = 0\n        espace_restant = 0\n      } else {\n        casier.hauteur_definie = false\n        casier.hauteur = espace_par_casier\n        espace_restant -= espace_par_casier\n        casiers_a_calculer -= 1\n      }\n      colonne.casiers[j] = casier\n    }\n\n    return colonne\n  }\n\n  function calculPositionCasiers(casiers, xpos){\n    for(let j = 0; j < casiers.length; j++) {\n      const jj = casiers.length - j - 1\n      casiers[j].xpos = xpos\n      casiers[j].ypos = opt.epaisseur_traverses * (jj + 1)\n        + casiers.slice(j+1).reduce((n,c) => n + c.hauteur, 0)\n    }\n    return casiers\n  }\n\n  function calculSubdivisionMontants(opt, ui_montants){\n    let subdivisions_montants = Array.from(Array(opt.colonnes.length + 1).keys()).map((i) => {\n      let ui_montant_panneaux_actifs = ((ui_montants[i] || {}).panneaux_actifs || [])\n      let ui_montant = {\n        ...ui_montants[i],\n        panneaux_actifs: [...((ui_montants[i] || {}).panneaux_actifs || [])]\n      }\n      let casiers_g = (opt.colonnes[i-1] || {}).casiers || []\n      let casiers_d = (opt.colonnes[i]   || {}).casiers || []\n      let hauteurs_g = casiers_g.slice(0, -1).map((casier, j) => (\n        {\n          gauche: [j, j+1],\n          [0]: casier.ypos - (casier.tiroir ? 0 : opt.epaisseur_traverses),\n          'h': casier.tiroir ? opt.largeur_traverses : opt.epaisseur_traverses,\n        }))\n      let hauteurs_d = casiers_d.slice(0, -1).map((casier, j) => (\n        {\n          droite: [j, j+1],\n          [0]: casier.ypos - (casier.tiroir ? 0 : opt.epaisseur_traverses),\n          'h': casier.tiroir ? opt.largeur_traverses : opt.epaisseur_traverses,\n        }))\n\n      // Fusion des hauteurs gauche et droite\n      // tri par la mesure [0] qui est la position verticale\n      // création de la mesure [1] qui est la position du haut de la traverse\n      // les traverses se recouvrant ne sont pas fusionnées\n\n      let hauteurs = hauteurs_g.concat(hauteurs_d)\n        .sort((a,b) => (a[0] < b[0]) ? -1 : (a[0] > b[0]) ? 1 : 0)\n        .map(h => ({...h, [1]: h[0] + h.h}))\n\n      //console.log(`opt.montants[${i}] opt.colonnes[${i-1}] =`, opt.colonnes[i-1])\n      //console.log(`opt.montants[${i}] opt.colonnes[${i}] =`, opt.colonnes[i])\n      //console.log(`opt.montants[${i}] hauteurs_g =`, hauteurs_g)\n      //console.log(`opt.montants[${i}] hauteurs_g =`, hauteurs_g.map(h => h[0]))\n      //console.log(`opt.montants[${i}] hauteurs_d =`, hauteurs_d)\n      //console.log(`opt.montants[${i}] hauteurs_d =`, hauteurs_d.map(h => h[0]))\n      //console.log(`opt.montants[${i}] hauteurs =`, hauteurs)\n\n      // Fusionm des traverses se chevauchant\n\n      let traverses = hauteurs\n        .reduce((hh, h1) => {\n\n          // Fusion, si aucune hauteur traitée, on utilise la hauteur courante\n          // dans hh (la liste de toutes les hauteurs)\n          if (hh.length == 0) return [{\n            gauche: [0, 0],\n            droite: [0, 0],\n            ...h1\n          }]\n\n          // h0: dernière hauteur\n          let h0 = hh[hh.length-1]\n\n          // Si la dernière hauteur se chevauche avec la hauteur en cours,\n          // modifier la valeur [1] de la dernière hauteur pour prendre la\n          // valeur haute courante et augmenter la dernière hauteur\n\n          if (h1[1] - h0[0] <= opt.largeur_traverses) {\n            hh[hh.length-1] = {\n              ...h0,\n              ...h1,\n              [1]: h1[1],\n            }\n            return hh\n          }\n\n          // Sinon, pas de chevauchement, on retourne la hauteur courante\n\n          return hh.concat([{\n            gauche: [h0.gauche[1], h0.gauche[1]],\n            droite: [h0.droite[1], h0.droite[1]],\n            ...h1}\n          ])\n        }, [])\n        .map(h => ({\n          ...h,\n          y1: h[0] + (h[1] - h[0]) / 2 - opt.largeur_traverses / 2,\n          y2: h[0] + (h[1] - h[0]) / 2 + opt.largeur_traverses / 2,\n        }))\n      //console.log(`opt.montants[${i}].traverses =`, traverses)\n      let ui_panneaux_actifs = Array.from(Array(traverses.length + 1).keys())\n        .map(j => typeof(ui_montant.panneaux_actifs[j]) == 'boolean' ? ui_montant.panneaux_actifs[j] : null)\n        .reduce((arr, x) => arr.concat([\n          typeof(x) == 'boolean' ? x :\n          arr.length == 0        ? true : arr[arr.length-1]]), [])\n      let panneaux = Array.from(Array(traverses.length + 1).keys()).map(j => {\n        let first = (j == 0)\n        let last  = (j >= traverses.length)\n        let cote  = (i == 0 || i == opt.colonnes.length)\n\n        return {\n          first:  first,\n          last:   last,\n          cote:   cote,\n          y1:     first ? (opt.largeur_traverses + (cote ? 0 : opt.epaisseur_traverses))\n                        : traverses[j-1].y2,\n          y2:     last  ? (opt.hauteur - opt.largeur_traverses - (cote ? 0 : opt.epaisseur_traverses))\n                        : traverses[j].y1,\n          gauche: first ? 0 : traverses[j-1].gauche[1],\n          droite: first ? 0 : traverses[j-1].droite[1],\n          actif:  ui_panneaux_actifs[j],\n        }\n      })\n      return {\n        traverses: traverses,\n        panneaux: panneaux,\n      }\n    })\n\n    return {\n      ...opt,\n      montants : opt.montants.map((m, i) => (\n        {\n          ...m,\n          ...subdivisions_montants[i],\n        }\n      ))\n    }\n  }\n\n  function calculEnfants(opt, children){\n    //console.log(`Caisson(${path}) Recalcul des enfants %o`, opt)\n    children = [...(children || [])]\n\n    // Migrate old portes\n    for(let i = 0; i < children.length; i++){\n      if(!children[i].source && i < opt.colonnes.length) children[i].source = ['Porte', 'colonne', i]\n    }\n\n    // Create new, remove old\n    for(let i = 0; i < opt.colonnes.length; i++){\n      const colonne = opt.colonnes[i]\n      children = creePorteColonne(colonne, i, children)\n\n      for(let j = 0; j < colonne.casiers.length; j++) {\n        const casier = colonne.casiers[j]\n        children = creePorteCasier(colonne, i, casier, j, children)\n        children = creeTiroirCasier(colonne, i, casier, j, children)\n        children = supprimeEtageres(colonne, i, casier, j, children)\n        children = creeEtageres(colonne, i, casier, j, children)\n      }\n    }\n\n    // Update values\n    for(let i = 0; i < children.length; i++){\n      let child = {\n        name: `n°${i+1}`,\n        ...children[i],\n      }\n\n      child = configurePorteColonne(child) || child\n      child = configurePorteFacadeCasier(child) || child\n      child = configureTiroir(child, children) || child\n      child = configureEtagere(child) || child\n\n      children[i] = child\n    }\n\n    return children\n\n    function creePorteColonne(colonne, i, children){\n      const child_idx = children.findIndex(c => (c.source || []).join('-') == `Porte-colonne-${i}`)\n      if (!colonne.porte.type) {\n        // Pas de porte\n        if (child_idx != -1) {\n          if (confirm(`Caisson ${data.name}\\nSupprimer la porte ${children[child_idx].name} ?\\n\\nATTENTION : clique sur OK uniquement, sinon il y aura une porte de trop.`)) {\n            children.splice(child_idx, 1)\n          } else {\n            children[child_idx].source.push('disabled')\n          }\n        }\n        return children\n      }\n      if (child_idx != -1) return children; // Porte trouvée\n\n      children = [...children, {\n        source: ['Porte', 'colonne', i],\n        name:   prompt(\"Quel nom donner à la porte ?\", `colonne n°${i+1}`),\n        type:   'Porte',\n        id:     nextId(children),\n      }]\n\n      return children\n    }\n\n    function configurePorteColonne(child) {\n      let source = [...(child.source || [])]\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Porte-colonne') return child\n\n      const col = opt.colonnes[i];\n      if(!col) return child;\n\n      const total    = (col.porte.type == 'total')\n      const demi     = (col.porte.type == 'demi')\n      const encastre = (col.porte.type == 'encastre')\n\n      const epaisseur_porte = (child.opt || {}).epaisseur || (child.opt || {}).epaisseur_montants\n\n      return {\n        ...child,\n        type: 'Porte',\n        defaults: {\n          force_largeur: true,\n          force_hauteur: true,\n          encastree: encastre,\n          largeur:\n            total    ? col.largeur + 2 * opt.epaisseur_montants :\n            demi     ? col.largeur + opt.epaisseur_montants :\n            encastre ? col.largeur\n                                           : 0,\n          hauteur:\n            total    ? opt.hauteur :\n            demi     ? opt.hauteur - opt.epaisseur_traverses :\n            encastre ? opt.hauteur - 2 * opt.epaisseur_traverses\n                                           : 0,\n        },\n        defaultPosition: {\n          x: col.ypos\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          y: opt.epaisseur_traverses\n             - (total ? opt.epaisseur_traverses :\n                demi  ? opt.epaisseur_traverses / 2\n                                            : 0),\n          z: opt.profondeur\n             - (encastre ? epaisseur_porte : 0),\n        },\n      }\n    }\n\n    function typePorte(casier){\n      return casier.porte.facade ? 'Facade' : 'Porte'\n    }\n\n    function supprimeEtageres(colonne, i, casier, j, children){\n      const num_etageres = casier.num_etageres\n\n      for(let idx = children.length-1; idx >= 0; idx--){\n        const child = children[idx]\n        let source = [...(child.source || [])] // Etagere-col-i-cas-j-num-n\n        let [num] = source.splice(6,1)\n        if(source.join('-') != `Etagere-col-${i}-cas-${j}-num`) continue\n        if(num < num_etageres) continue\n\n        if (confirm(`Caisson ${data.name}\\nSupprimer l'étagère ${child.name} ?\\n\\nATTENTION : clique sur OK uniquement, sinon il y aura une étagère de trop.`)) {\n          children.splice(i, 1)\n        } else {\n          children[i].source.push('disabled')\n        }\n      }\n      return children\n    }\n\n    function creeEtageres(colonne, i, casier, j, children){\n      const num_etageres = casier.num_etageres\n      let name = null\n\n      for(let num = 0; num < num_etageres; num++){\n        const src = `Etagere-col-${i}-cas-${j}-num-${num}`\n        const child_idx = children.findIndex(c => (c.source || []).join('-') == src)\n        if(child_idx != -1) continue\n\n        if(name == null) {\n          name = `colonne n°${i+1}, casier n°${j+1}`\n          name = prompt(`Quel nom donner aux étagères ?`, name) || name\n        }\n\n        children = [...children, {\n          source: ['Etagere', 'col', i, 'cas', j, 'num', num],\n          name:   `${name} #${num+1}`,\n          type:   'Etagere',\n          id:     nextId(children),\n        }]\n      }\n      return children\n    }\n\n    function configureEtagere(child) {\n      let source = [...(child.source || [])]\n      let [num] = source.splice(6, 1)\n      let [j] = source.splice(4, 1)\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Etagere-col-cas-num') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas)  return child;\n\n      const step = cas.hauteur / (cas.num_etageres + 1)\n\n      return {\n        ...child,\n        type: 'Etagere',\n        defaults: {\n          force_largeur:    true,\n          force_profondeur: true,\n          largeur:          col.largeur,\n          profondeur:       opt.profondeur,\n        },\n        defaultPosition: {\n          x: col.xpos,\n          y: cas.ypos + (num+1) * step,\n          z: 0,\n        },\n      }\n    }\n\n    function creePorteCasier(colonne, i, casier, j, children){\n      const type = typePorte(casier)\n\n      const variants =\n        (!casier.porte.type) ? [\n          ] :\n        (casier.porte.double) ? [\n          `${type}-col-${i}-cas-${j}-g`,\n          `${type}-col-${i}-cas-${j}-d`]\n        : [\n          `${type}-col-${i}-cas-${j}`]\n\n      const all_variants = [\n        `Porte-col-${i}-cas-${j}`,\n        `Porte-col-${i}-cas-${j}-g`,\n        `Porte-col-${i}-cas-${j}-d`,\n        `Facade-col-${i}-cas-${j}`,\n        `Facade-col-${i}-cas-${j}-g`,\n        `Facade-col-${i}-cas-${j}-d`,\n      ]\n\n      // Supprimer la facade si elle n'est pas du bon type\n      for(let idx = children.length-1; idx >= 0; idx--){\n        const source = (children[idx].source || []).join('-')\n        //console.log(source, variants, all_variants)\n        console.log(source, children[idx].name)\n        if (variants.includes(source) || !all_variants.includes(source)) break\n\n        if (confirm(`Caisson ${data.name}\\nSupprimer la ${children[idx].type} ${children[idx].name} ?\\n\\nATTENTION : clique sur OK uniquement, sinon il y aura une ${children[idx].type} de trop.`)) {\n          children.splice(idx, 1)\n        } else {\n          children[idx].source.push('disabled')\n        }\n      }\n\n      // pas de porte à créer\n      if(!casier.porte.type) return children\n\n      if(casier.porte.double) {\n        const child_idx_g = children.findIndex(c => (c.source||[]).join('-') == variants[0])\n        const child_idx_d = children.findIndex(c => (c.source||[]).join('-') == variants[1])\n        let namePrefix = `colonne n°${i+1}, casier n°${j+1}`\n        if (child_idx_g == -1 && child_idx_d == -1) {\n          namePrefix = prompt(`Quel nom donner aux ${type.toLowerCase()}s ?`, namePrefix) || namePrefix\n        }\n        if (child_idx_g == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j, 'g'],\n            name:   `${namePrefix} gauche`,\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n        if (child_idx_d == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j, 'd'],\n            name:   `${namePrefix} droite`,\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n      } else {\n        const child_idx = children.findIndex(c => (c.source||[]).join('-') == variants[0])\n        if (child_idx == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j],\n            name:   prompt(`Quel nom donner à la ${type.toLowerCase()} ?`, `colonne n°${i+1}, casier n°${j+1}`),\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n      }\n\n      return children;\n    }\n\n    function configurePorteFacadeCasier(child) {\n      let source = [...(child.source || [])]\n      let [side] = source.splice(5, 1)\n      let [j]    = source.splice(4, 1)\n      let [i]    = source.splice(2, 1)\n      let [type] = source.splice(0, 1)\n      if(source.join('-') != 'col-cas') return child\n      if(type != 'Porte' && type != 'Facade') return child\n      if(side && side != 'g' && side != 'd') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas) return child;\n\n      const double   = !!side\n      const total    = (cas.porte.type == 'total')\n      const demi     = (cas.porte.type == 'demi')\n      const encastre = (cas.porte.type == 'encastre')\n\n      const epaisseur_porte = (child.opt || {}).epaisseur || (child.opt || {}).epaisseur_montants\n\n      const defaults = {\n        force_ferrage: true,\n        ferrage:       cas.tiroir ? 'aucun' : 'charnieres',\n        encastree:     encastre,\n        force_largeur: true,\n        force_hauteur: true,\n\n        largeur: (1 / (double ? 2 : 1)) * (\n          total    ? col.largeur + 2 * opt.epaisseur_montants :\n          demi     ? col.largeur + opt.epaisseur_montants :\n          encastre ? col.largeur\n                                         : 0),\n        hauteur:\n          total    ? cas.hauteur + 2 * opt.epaisseur_traverses :\n          demi     ? cas.hauteur + opt.epaisseur_traverses :\n          encastre ? cas.hauteur\n                                         : 0,\n      }\n\n      const defaultPosition = {\n          x: cas.xpos\n             + (side == 'd' ? defaults.largeur : 0)\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          y: cas.ypos\n             - (total ? opt.epaisseur_traverses :\n                demi  ? opt.epaisseur_traverses / 2\n                                            : 0),\n          z: opt.profondeur\n             - (encastre ? epaisseur_porte : 0),\n        }\n\n      return {\n        ...child,\n        type: type,\n        defaults,\n        defaultPosition,\n      }\n    }\n\n    function creeTiroirCasier(colonne, i, casier, j, children){\n      const child_idx = children.findIndex(c => (c.source || []).join('-') == `Tiroir-col-${i}-cas-${j}`)\n\n      // Supprimer le tiroir si il n'existe pas\n      // Si il existe, return\n\n      if (!casier.tiroir) {\n        // Pas de tiroir\n        if (child_idx != -1 && confirm(`Supprimer le tiroir ${children[child_idx].name} ?\\n\\nATTENTION : clique sur OK uniquement, sinon il y aura un tiroir de trop.`)) {\n          children.splice(child_idx, 1)\n        }\n        return children\n      }\n      if (child_idx != -1) return children; // Tiroir trouvé\n\n      // Créer le tiroir si il n'est pas encore créé\n\n      children = [...children, {\n        source: ['Tiroir', 'col', i, 'cas', j],\n        name:   prompt(`Quel nom donner au tiroir ?`, `colonne n°${i+1}, casier n°${j+1}`),\n        type:   'Tiroir',\n        id:     nextId(children),\n      }]\n\n      return children\n    }\n\n    function configureTiroir(child, children) {\n      let source = [...(child.source||[])]\n      let [j] = source.splice(4, 1)\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Tiroir-col-cas') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas) return child;\n\n      const facade = children.find(c => (c.source || []).join('-') == `${typePorte(cas)}-col-${i}-cas-${j}`) || {}\n      const epaisseur_porte = facade ? ((facade.opt || {}).epaisseur || (facade.opt || {}).epaisseur_montants) : 0\n      const retrait = (cas.porte.type == 'encastre') ? epaisseur_porte : 0\n\n      return {\n        ...child,\n        type: 'Tiroir',\n        defaults: {\n          force_largeur: true,\n          force_hauteur: true,\n          largeur:       col.largeur,\n          hauteur:       Math.min(150, cas.hauteur),\n          profondeur:    opt.profondeur - retrait,\n        },\n        defaultPosition: {\n          x: cas.xpos,\n          y: cas.ypos,\n          z: (cas.porte.type == 'encastre') ? epaisseur_porte : 0,\n        },\n      }\n    }\n  }\n\n  //\n  // Pièces\n  //\n\n  let montant = new Piece()\n    .add_name(\"Montant\")\n    .add_features('montant')\n\n  let traverse = new Piece()\n    .add_name(\"Traverse\")\n    .add_features('traverse')\n\n  let piece_panneau = new Piece()\n    .add_name(\"Panneau\")\n    .add_features('panneau')\n\n  $: montants_template = montant\n    .build(\n      opt.hauteur,\n      opt.largeur_montants,\n      opt.epaisseur_montants)\n\n  $: montant_ar_g = montants_template\n    .add_name(\"arrière-gauche\")\n    .put(0, 0, 0, 'yzx')\n\n  $: montant_av_g = montants_template\n    .add_name(\"avant-gauche\")\n    .put(opt.largeur - montants_template.epaisseur, 0, opt.profondeur - montants_template.largeur, 'yzx')\n\n  $: montant_ar_d = montants_template\n    .add_name(\"arrière-droit\")\n    .put(opt.largeur - montants_template.epaisseur, 0, 0, 'yzx')\n\n  $: montant_av_d = montants_template\n    .add_name(\"avant-droit\")\n    .put(0, 0, opt.profondeur - montants_template.largeur, 'yzx')\n\n  $: traverses_cote = traverse\n    .build(\n      opt.profondeur - 2 * (opt.largeur_montants - opt.profondeur_tenons_cotes),\n      opt.largeur_traverses,\n      opt.epaisseur_traverses)\n    .usine_tenons(opt.profondeur_tenons_cotes)\n    .put(null, null, opt.largeur_montants - opt.profondeur_tenons_cotes, 'zyx')\n\n  $: traverse_cote_h_g = traverses_cote\n    .add_name(\"haut-gauche\")\n    .put(0, 0)\n\n  $: traverse_cote_b_g = traverses_cote\n    .add_name(\"bas-gauche\")\n    .put(0, opt.hauteur - traverses_cote.largeur)\n\n  $: traverse_cote_h_d = traverses_cote\n    .add_name(\"haut-droit\")\n    .put(opt.largeur - traverses_cote.epaisseur, 0)\n\n  $: traverse_cote_b_d = traverses_cote\n    .add_name(\"bas-droit\")\n    .put(opt.largeur - traverses_cote.epaisseur, opt.hauteur - traverses_cote.largeur)\n\n  $: traverses = traverse\n    .add_name(\"principale\")\n    .build(\n      opt.largeur - 2 * (opt.epaisseur_montants - opt.profondeur_tenons),\n      opt.largeur_traverses,\n      opt.epaisseur_traverses)\n    .usine_tenons(opt.profondeur_tenons)\n    .put(opt.epaisseur_montants - opt.profondeur_tenons, null, null, 'xzy')\n\n  $: traverse_ar_h = traverses\n    .add_name(\"arrière-haut\")\n    .put(null, 0, 0)\n\n  $: traverse_ar_b = traverses\n    .add_name(\"arrière-bas\")\n    .put(null, opt.hauteur - traverses.epaisseur, 0)\n\n  $: traverse_av_h = traverses\n    .add_name(\"avant-haut\")\n    .put(null, 0, opt.profondeur - traverses.largeur)\n\n  $: traverse_av_b = traverses\n    .add_name(\"avant-bas\")\n    .put(null, opt.hauteur - traverses.epaisseur, opt.profondeur - traverses.largeur)\n\n  $: panneaux_haut_bas = piece_panneau\n    .build(\n      opt.largeur - 2 * (opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.epaisseur_panneau)\n    .put(\n      opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n      null,\n      opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n      'xzy')\n\n  $: panneau_h = opt.separer_haut ? (\n    opt.colonnes.map((col, i) => (\n      (col.panneau_haut == false) ? null :\n      (piece_panneau\n        .add_name(\"haut\", `colonne n°${i+1}`)\n        .build(\n          col.largeur + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n          opt.epaisseur_panneau)\n        .put(\n          opt.epaisseur_montants\n            + opt.colonnes.slice(0, i).map(x => x.largeur).reduce((a, b) => a+b, 0)\n            + i * opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n          opt.hauteur - panneaux_haut_bas.epaisseur,\n          opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n          'xzy'))))) : (\n    [!opt.panneau_dessus ? null : panneaux_haut_bas\n      .add_name(\"haut\")\n      .put(null, 0)])\n\n  $: panneau_b = opt.separer_bas ? (\n    opt.colonnes.map((col, i) => (\n      (col.panneau_bas == false) ? null :\n      (piece_panneau\n        .add_name(\"bas\", `colonne n°${i+1}`)\n        .build(\n          col.largeur + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n          opt.epaisseur_panneau)\n        .put(\n          opt.epaisseur_montants\n            + opt.colonnes.slice(0, i).map(x => x.largeur).reduce((a, b) => a+b, 0)\n            + i * opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n          0,\n          opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n          'xzy'))))) : (\n    [!opt.panneau_dessous ? null : panneaux_haut_bas\n      .add_name(\"bas\")\n      .put(null, opt.hauteur - panneaux_haut_bas.epaisseur)])\n\n  $: panneaux_dos = opt.colonnes.map((col, i) => (col.casiers.map((casier, j) =>\n    (casier.panneau_dos == false) ? null :\n    (piece_panneau\n      .add_name(\"dos\", `colonne n°${i+1}`, `casier n°${j+1}`)\n      .build(\n        casier.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        col.largeur + opt.epaisseur_montants - opt.largeur_montants / 2\n                    + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        opt.epaisseur_panneau)\n      .put(\n        casier.xpos - opt.profondeur_rainure + opt.jeu_rainure,\n        casier.ypos - opt.profondeur_rainure + opt.jeu_rainure,\n        0, 'yxz')))))\n\n  $: montants_cloisons = Array.from(Array(opt.colonnes.length - 1).keys()).map((i) => (montant\n    .add_name(`cloison n°${i+1}`)\n    .build(\n      opt.hauteur - 2 * (opt.epaisseur_traverses - opt.montants_inter_longueur_tenon),\n      opt.largeur_montants,\n      opt.epaisseur_montants)\n    .usine_tenons(opt.montants_inter_longueur_tenon)\n    .put(\n      opt.epaisseur_montants\n        + opt.colonnes.slice(0, i+1).map(x => x.largeur).reduce((a, b) => a+b, 0)\n        + i * opt.epaisseur_montants,\n      opt.epaisseur_traverses - opt.montants_inter_longueur_tenon,\n      null,\n      'yzx')))\n\n  $: montants_cloisons_av = montants_cloisons.map((m, i) => (m\n    .add_name(\"avant\")\n    .put(null, null, opt.profondeur - m.largeur)))\n\n  $: montants_cloisons_ar = montants_cloisons.map((m, i) => (m\n    .add_name(\"arrière\")\n    .put(null, null, 0)))\n\n  $: traverses_cote_inter_caissons =\n    opt.montants.map((sub, i) => (\n      sub.traverses.map((h, j) => (traverses_cote\n        .add_name(\n          (i == 0)                  ? \"coté gauche\" :\n          (i < opt.colonnes.length) ? `cloison n°${i}` : \"coté droit\")\n        .add_name(`traverse n°${j+1}`)\n        .put(\n          opt.epaisseur_montants * (i)\n            + opt.colonnes.slice(0, i).reduce((n, c) => n+c.largeur, 0),\n          h.y1)\n      ))\n    ))\n\n  $: panneaux_cote_et_cloisons = opt.montants.map((sub, i) => (\n    sub.panneaux.map((panneau, j) => !panneau.actif ? null : (\n      piece_panneau\n      .add_name(\n        (i == 0)                   ? \"coté gauche\" :\n        (i >= opt.colonnes.length) ? \"coté droit\"  : `cloison n°${i}`,\n        `caisson n°${j+1}`)\n      .build(\n        panneau.y2 - panneau.y1 + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n        opt.epaisseur_panneau)\n      .put(\n        opt.epaisseur_montants * (i)\n          + opt.colonnes.slice(0, i).reduce((n, c) => n+c.largeur, 0),\n        panneau.y1 - opt.profondeur_rainure + opt.jeu_rainure,\n        opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n        'yzx')\n    ))\n  ))\n\n  $: traverses_cloisons = Array.from(Array(opt.colonnes.length - 1).keys()).map((i) => (traverse\n    .add_name(`cloison n°${i+1}`)\n    .build(\n      opt.profondeur - 2 * (opt.largeur_montants - opt.profondeur_tenons_cotes),\n      opt.largeur_traverses,\n      opt.epaisseur_traverses)\n    .usine_tenons(opt.profondeur_tenons_cotes)\n    .put(\n      opt.epaisseur_montants\n        + opt.colonnes.slice(0, i+1).map(x => x.largeur).reduce((a, b) => a+b, 0)\n        + i * opt.epaisseur_montants,\n      null,\n      opt.largeur_montants - opt.profondeur_tenons_cotes,\n      'zyx') ))\n\n  $: traverses_cloisons_h = traverses_cloisons.map((t, i) => (t\n    .add_name(\"haut\")\n    .build_if(opt.separer_haut, null, opt.hauteur_traverses_separees)\n    .put(null, opt.hauteur - (opt.separer_haut ? opt.hauteur_traverses_separees : opt.epaisseur_traverses + t.largeur))))\n\n  $: traverses_cloisons_b = traverses_cloisons.map((t, i) => (t\n    .add_name(\"bas\")\n    .build_if(opt.separer_bas, null, opt.hauteur_traverses_separees)\n    .put(null, opt.separer_bas ? 0 : opt.epaisseur_traverses)))\n\n  $: traverses_inter2_av_ar = opt.colonnes.map((col, i) => (\n    col.casiers.map((casier, j) => (j == col.casiers.length-1) ? null : (\n      traverse\n        .add_name(\"intermédiaire\")\n        .build(col.largeur, opt.largeur_traverses, opt.epaisseur_traverses)\n        .ajout_tenons(opt.profondeur_tenons)\n        .put(\n          casier.xpos - opt.profondeur_tenons,\n          casier.ypos - opt.epaisseur_traverses,\n          null,\n          'xzy')\n    ))\n  ))\n\n  $: traverses_inter2_av = traverses_inter2_av_ar.map((col, i) => (\n    col.map((tr, j) => (tr == null) ? null : (tr\n      .add_name(\"avant\", `cloison n°${i+1}`, `caisson n°${j}`)\n      .put(null, null, opt.profondeur - opt.largeur_montants)\n    ))\n  ))\n\n  $: traverses_inter2_ar = traverses_inter2_av_ar.map((col, i) => (\n    col.map((tr, j) => (tr == null) ? null : (tr\n      .add_name(\"arrière\", `cloison n°${i+1}`, `caisson n°${j}`)\n      .put(null, null, 0)\n    ))\n  ))\n\n  $: panneau_inter2_dessous = opt.colonnes.map((col, i) => (\n    col.casiers.map((casier, j) =>\n      (j == col.casiers.length-1) ? null :\n      (casier.panneau_dessous === false) ? null :\n      (piece_panneau\n        .add_name(\"dessous\", `colonne n°${i+1}`, `casier n°${j+1}`)\n        .build(\n          col.largeur\n            + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.profondeur\n            - 2 * opt.largeur_traverses\n            + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.epaisseur_panneau)\n        .put(\n          casier.xpos - opt.profondeur_rainure + opt.jeu_rainure,\n          casier.ypos - opt.epaisseur_panneau,\n          opt.largeur_traverses\n            - opt.profondeur_rainure + opt.jeu_rainure,\n          'xzy')\n    ))\n  ))\n\n  let all_pieces = []\n  let child_pieces = []\n\n  $: pieces = [\n    montant_ar_g, montant_av_g, montant_ar_d, montant_av_d,\n    traverse_cote_b_d, traverse_cote_b_g, traverse_cote_h_d, traverse_cote_h_g,\n    traverse_av_h, traverse_av_b, traverse_ar_h, traverse_ar_b,\n  ]\n    .concat(panneau_h)\n    .concat(panneau_b)\n    .concat(panneaux_dos.reduce((a,b) => a.concat(b), []))\n    .concat(panneaux_cote_et_cloisons.reduce((a,b) => a.concat(b), []))\n    .concat(montants_cloisons_ar)\n    .concat(montants_cloisons_av)\n    .concat(traverses_cloisons_h)\n    .concat(traverses_cloisons_b)\n    .concat(traverses_inter2_av.reduce((a,b) => a.concat(b), []))\n    .concat(traverses_inter2_ar.reduce((a,b) => a.concat(b), []))\n    .concat(traverses_cote_inter_caissons.reduce((a,b) => a.concat(b), []))\n    .concat(panneau_inter2_dessous.reduce((a,b) => a.concat(b), []))\n    .filter(x => x)\n\n  $: all_pieces = pieces.concat(child_pieces)\n\n  $: state.pieces = all_pieces\n\n  function rename(){\n    data.name = prompt(`Renommer \"${data.name}\" en :`, data.name) || data.name\n  }\n</script>\n\n<Component bind:data={data} path={path} state={state} bind:childrenState={childrenState} bind:children={children} on:datachange>\n  <style>\n    form > label {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: nowrap;\n      max-width: 30em;\n    }\n    form > label:not(.no-align) > *:first-child {\n      flex-grow: 1;\n    }\n    hr.clear {\n      clear: both;\n      border: none;\n    }\n    td {\n      vertical-align: top;\n    }\n    table.panneaux .center {\n      text-align: center\n    }\n    table.panneaux .vertical {\n      //transform: rotate(-90deg);\n      //transform-origin: left;\n      //text-orientation: mixed;\n      writing-mode: sideways-lr;\n      min-width: 1em;\n    }\n\n    .meuble {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      margin: 0.5em;\n    }\n    .meuble .colonne {\n      display: flex;\n      flex-direction: column;\n      width: 2em;\n    }\n    .meuble .colonne .casier {\n      border: 1px solid #eee;\n      text-align: center;\n    }\n    .meuble .colonne .casier input[type=radio] {\n      margin: 0.5em;\n    }\n\n    .meuble .casier.panneau-haut           { border-top: 3px solid black; }\n    .meuble .casier.panneau-bas            { border-bottom: 3px solid black; }\n    .meuble .casier.panneau-gauche-partiel { border-left: 3px dotted black; }\n    .meuble .casier.panneau-droit-partiel  { border-right: 3px dotted black; }\n    .meuble .casier.panneau-gauche         { border-left: 3px solid black; }\n    .meuble .casier.panneau-droit          { border-right: 3px solid black; }\n    .meuble .casier.panneau-dos            { background-color: #ddd; }\n\n    .prefs-casier {\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n    }\n\n    .prefs-casier > * {\n      margin: 0.5em;\n    }\n\n    .vertical-text {\n      /*transform: rotate(90deg);*/\n      writing-mode: vertical-lr;\n      width: 1rem;\n      padding-top: 2rem;\n    }\n  </style>\n\n  <div slot=\"plan\">\n    <h2>{data.type} {data.name} <a href=\"@\" on:click|preventDefault={rename}>✎</a></h2>\n    <SVGDrawing pieces={all_pieces} name=\"Dessin\" />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n\n    <h3>Mesures</h3>\n\n    <form>\n    <label><span>Hauteur    : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} /> mm </label>\n    <label><span>Largeur    : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur}/> mm </label>\n    <label><span>Colonnes   : </span><input type=number bind:value={num_colonnes} min=1/></label>\n    <label class=\"no-align\"><InputCheckbox tristate={false}\n      def={defaults.separer_haut}\n      bind:checked={ui.separer_haut}\n      /> séparer le panneau du haut (traverses de {opt.hauteur_traverses_separees})</label>\n    <label class=\"no-align\"><InputCheckbox tristate={false}\n      def={defaults.separer_bas}\n      bind:checked={ui.separer_bas}\n      /> séparer le panneau du bas (traverses de {opt.hauteur_traverses_separees})</label>\n\n    <table>\n      <tr>\n        <td></td>\n        <td rowspan=\"4\" class=\"vertical-text\">coté gauche</td>\n        {#each opt.colonnes as colonne, i}\n          {#if i > 0}\n          <td class=\"vertical-text\" rowspan=\"4\">cloison n°{i}</td>\n          {/if}\n          <th>Colonne n°{i+1}</th>\n        {/each}\n        <td class=\"vertical-text\" rowspan=\"4\">coté droit</td>\n      </tr>\n      <tr>\n        <td>Largeur intérieure&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          <input type=number min=0\n            placeholder={colonne.largeur}\n            bind:value={largeur_colonnes[i]}\n            style=\"width: 5em\" />\n        </td>\n        {/each}\n        <td>mm</td>\n      </tr>\n      <tr>\n        <td>Casiers&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          <input type=number min=1\n            bind:value={num_casiers_colonnes[i]}\n            style=\"width: 5em\" />\n        </td>\n        {/each}\n        <td></td>\n      </tr>\n      <tr>\n        <td>Hauteur intérieure&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          {#each colonne.casiers as casier, j}\n            {#if j > 0}\n            <br/>\n            {/if}\n            <input type=number min=1\n              title={`colonne n° ${i+1}, casier n°${j+1}`}\n              placeholder={colonne.casiers[j].hauteur}\n              bind:value={hauteur_casiers_colonnes[i][j]}\n              style=\"width: 5em\" />\n          {/each}\n        </td>\n        {/each}\n        <td></td>\n      </tr>\n    </table>\n\n    {#if largeur_colonnes.filter(x => (x && x != 0)).length == largeur_colonnes.length}\n    <p>Attention : trop de largeurs sont définies en même temps</p>\n    {/if}\n\n    <fieldset>\n      <legend>Subdivisions des cloisons (ne pas modifier, en cours de travail)</legend>\n      <table class=\"styled\">\n        <tr>\n          <td></td>\n          {#each ui_montants as ui_montant, i}\n            {#if i == 0}\n            <th colspan=\"2\">coté gauche</th>\n            {:else if i == ui_montants.length - 1}\n            <th colspan=\"2\">coté droit</th>\n            {:else}\n            <th colspan=\"2\">cloison n°{i}</th>\n            {/if}\n          {/each}\n        </tr>\n        <tr>\n          <th>Nombre de traverses</th>\n          {#each ui_montants as ui_montant, i}\n            <td colspan=\"2\"><InputNumber size=5 def={opt.montants[i].traverses.length}/></td>\n          {/each}\n        </tr>\n        <tr>\n          <th>Traverses</th>\n          {#each ui_montants as ui_montant, i}\n            <td>hauteur traverse</td>\n            <td>position du bas</td>\n          {/each}\n        </tr>\n        {#each [...new Array(Math.max(...opt.montants.map(m => m.traverses.length))).keys()].reverse() as j}\n        <tr>\n          <td>Traverse n°{j+1}</td>\n          {#each ui_montants as ui_montant, i}\n            {#if j < opt.montants[i].traverses.length}\n              <td>\n                <!-- {JSON.stringify(opt.montants[i].traverses[j][0], null, 2)} -->\n                <InputNumber size=5 def={opt.montants[i].traverses[j].h}/>\n              </td>\n              <td>\n                <InputNumber size=5 def={opt.montants[i].traverses[j][0]}/>\n              </td>\n            {:else}\n              <td></td><td></td>\n            {/if}\n          {/each}\n        </tr>\n        {/each}\n    </fieldset>\n\n    <hr/>\n\n    <div class=\"prefs-casier\">\n      <div class=\"meuble\"\n        class:panneau-haut={opt.panneau_dessus}\n        class:panneau-bas={opt.panneau_dessous}>\n        {#each opt.colonnes as colonne, i}\n        <div class=\"colonne colonne-{i}\">\n          <!--<div>Colonne n°{i}</div>-->\n          {#each colonne.casiers as casier, j}\n          <label\n            class=\"casier casier-{i}-{j}\"\n            class:panneau-haut={  j > 0 ? opt.colonnes[i].casiers[j-1].panneau_dessous :\n                                  opt.separer_haut ?  opt.colonnes[i].panneau_haut :\n                                  opt.panneau_dessus }\n            class:panneau-bas={   j < ui_colonnes[i].casiers.length-1 ? opt.colonnes[i].casiers[j].panneau_dessous :\n                                  opt.separer_bas ? opt.colonnes[i].panneau_bas :\n                                  opt.panneau_dessous}\n            class:panneau-gauche={opt.montants[i].panneaux\n                                  .map((p,k) => p.droite != j || opt.montants[i].panneaux[k].actif)\n                                  .reduce((b, p) => b && p, true)}\n            class:panneau-droit={ opt.montants[i+1].panneaux\n                                  .map((p,k) => p.gauche != j || opt.montants[i+1].panneaux[k].actif)\n                                  .reduce((b, p) => b && p, true)}\n            class:panneau-gauche-partiel={\n                                  opt.montants[i].panneaux\n                                  .map((p,k) => p.droite == j && opt.montants[i].panneaux[k].actif)\n                                  .reduce((b, p) => b || p, false)}\n            class:panneau-droit-partiel={\n                                  opt.montants[i+1].panneaux\n                                  .map((p,k) => p.gauche == j && opt.montants[i+1].panneaux[k].actif)\n                                  .reduce((b, p) => b || p, false)}\n            class:panneau-dos={opt.colonnes[i].casiers[j].panneau_dos}\n            class:tiroir={opt.colonnes[i].casiers[j].tiroir}\n            style=\"flex-grow: {casier.hauteur}\">\n            <!-- Casier n°{j} -->\n            <input type=\"radio\" name=\"selection-casier\" value={`${i},${j}`} bind:group={selection_casier_input} />\n          </label>\n          {/each}\n        </div>\n        {/each}\n      </div>\n\n      <div>\n        {#each [selection_casier] as sel (sel.key)}\n        <p><strong>Colonne n°{selection_casier_i+1}</strong></p>\n        <fieldset>\n          <legend>Porte colonne n°{selection_casier_i+1}</legend>\n          <label>\n            <span>Type :&nbsp;</span>\n            <InputSelect init={opt.colonnes[selection_casier_i].porte.type} bind:value={ui_colonnes[selection_casier_i].porte.type}>\n              <option value=\"\">Aucune</option>\n              <option value=\"total\">Recouvrement total</option>\n              <option value=\"demi\">Recouvrement à moitié</option>\n              <option value=\"encastre\">Encastré</option>\n            </InputSelect>\n          </label>\n          <label style=\"display: none\"><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].porte.double}\n            bind:checked={ui_colonnes[selection_casier_i].porte.double}\n            /> porte double</label>\n        </fieldset>\n        {/each}\n      </div>\n\n      <div>\n        {#each [selection_casier] as sel (sel.key)}\n        <p><strong>Casier n° {selection_casier_j+1}</strong></p>\n        <fieldset>\n          <legend>Porte col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label>\n            <span>Type :&nbsp;</span>\n            <InputSelect\n              init={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.type}\n              bind:value={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.type}>\n              <option value=\"\">Aucune</option>\n              <option value=\"total\">Recouvrement total</option>\n              <option value=\"demi\">Recouvrement à moitié</option>\n              <option value=\"encastre\">Encastré</option>\n            </InputSelect>\n            <label><InputCheckbox tristate={false}\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.double}\n              bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.double}\n              /> porte double</label>\n            <label><InputCheckbox tristate={false}\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.facade}\n              bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.facade}\n              /> façade seulement</label>\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Étagère col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label>\n            <span>Nombre d'étagères</span>\n            <InputNumber\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].num_etageres}\n              bind:value={ui_colonnes[selection_casier_i].casiers[selection_casier_j].num_etageres}\n              />\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Tiroir col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].tiroir}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].tiroir}\n            /> tiroir</label>\n        </fieldset>\n        <fieldset>\n          <legend>Panneaux col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          {#if selection_casier_j == 0 && ui.separer_haut}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].panneau_haut}\n            bind:checked={ui_colonnes[selection_casier_i].panneau_haut}\n            /> panneau dessus (colonne)</label>\n          {:else if selection_casier_j == 0}\n          <label><InputCheckbox tristate={false}\n            def={opt.panneau_dessus}\n            bind:checked={ui.panneau_dessus}\n            /> panneau dessus (tout le meuble)</label>\n          {:else}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j-1].panneau_dessous}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j-1].panneau_dessous}\n            /> panneau dessus</label>\n          {/if}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dos}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dos}\n            /> panneau dos</label>\n          {#if selection_casier_j < ui_colonnes[selection_casier_i].casiers.length-1}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dessous}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dessous}\n            /> panneau dessous</label>\n          {:else if ui.separer_bas}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].panneau_bas}\n            bind:checked={ui_colonnes[selection_casier_i].panneau_bas}\n            /> panneau dessous (colonne)</label>\n          {:else}\n          <label><InputCheckbox tristate={false}\n            def={opt.panneau_dessous}\n            bind:checked={ui.panneau_dessous}\n            /> panneau dessous (tout le meuble)</label>\n          {/if}\n          {#each opt.montants[selection_casier_i].panneaux as panneau, k}\n            {#if panneau.droite == selection_casier_j}\n              <label><InputCheckbox tristate={false}\n                def={opt.montants[selection_casier_i].panneaux[k].actif}\n                bind:checked={ui_montants[selection_casier_i].panneaux_actifs[k]}\n                /> panneau gauche (n°{k+1})</label>\n            {/if}\n          {/each}\n          {#each opt.montants[selection_casier_i+1].panneaux as panneau, k}\n            {#if panneau.gauche == selection_casier_j}\n              <label><InputCheckbox tristate={false}\n                def={opt.montants[selection_casier_i+1].panneaux[k].actif}\n                bind:checked={ui_montants[selection_casier_i+1].panneaux_actifs[k]}\n                /> panneau droite (n°{k+1})</label>\n            {/if}\n          {/each}\n        </fieldset>\n        {/each}\n      </div>\n    </div>\n\n    <hr/>\n\n    <label><span>Épaisseur montants : </span><InputNumber def={opt.epaisseur_montants} bind:value={ui.epaisseur_montants} min=0/> mm</label>\n    <label><span>Épaisseur traverses : </span><InputNumber def={opt.epaisseur_traverses} bind:value={ui.epaisseur_traverses} min=0/> mm</label>\n    <label><span>Largeur montants : </span><InputNumber def={opt.largeur_montants} bind:value={ui.largeur_montants} min=0/> mm</label>\n    <label><span>Largeur traverses : </span><InputNumber def={opt.largeur_traverses} bind:value={ui.largeur_traverses} min=0/> mm</label>\n    <label><span>Profondeur tenons cotés : </span><InputNumber def={opt.profondeur_tenons_cotes} bind:value={ui.profondeur_tenons_cotes} min=0/> mm</label>\n    <label><span>Profondeur tenons : </span><InputNumber def={opt.profondeur_tenons} bind:value={ui.profondeur_tenons} min=0/> mm</label>\n\n    <hr/>\n\n    <label><span>Épaisseur panneau : </span><InputNumber def={opt.epaisseur_panneau} bind:value={ui.epaisseur_panneau} min=0/> mm </label>\n    <label><span>Profondeur rainure : </span><InputNumber def={opt.profondeur_rainure} bind:value={ui.profondeur_rainure} min=0/> mm</label>\n    <label><span>Jeu panneau / rainure : </span><InputNumber def={opt.jeu_rainure} bind:value={ui.jeu_rainure} min=0/> mm</label>\n    <label><span>Longueur tenons cloisons : </span> <InputNumber def={opt.montants_inter_longueur_tenon} bind:value={ui.montants_inter_longueur_tenon} min=0/> mm</label>\n\n    </form>\n  </div>\n\n  <div slot=\"children\">\n    <ChildrenPositions\n      children={children}\n      childrenState={childrenState}\n      defaultChildrenPos={children.map(c => c.defaultPosition)}\n      bind:childrenPos={childrenPos}\n      bind:pieces={child_pieces} />\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(all_pieces, `Caisson ${data.name}`, 'Caisson')} />\n  </div>\n\n  <!--\n  <div slot=\"debug\">\n    opt = <pre>${JSON.stringify(opt, null, 2)}</pre>\n  </div>\n  -->\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  let defaults = {\n    largeur: 400,\n    profondeur: 300,\n    epaisseur: 17,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n  let state = {}\n\n  $: opt      = {...defaults, ...cleanObject(ui)}\n  $: data.opt = opt\n  $: data.ui  = ui\n\n  let zoom = 0.5\n\n  $: etagere = new Piece()\n    .add_name(\"Étagère\")\n    .build(opt.largeur, opt.profondeur, opt.epaisseur)\n    .put(0, 0, 0, 'xzy')\n    .add_features('panneau-seul')\n\n  $: pieces = [etagere]\n\n  $: state.pieces = pieces\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} path={path} state={state} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Étagère ${data.name}`} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Longueur   : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur} force={defaults.force_profondeur}/> mm</label>\n    <label><span>Épaisseur  : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Étagère ${data.name}`, 'Etagere')} />\n  </div>\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n  let state = {}\n\n  let defaults = {\n    largeur: 400,\n    hauteur: 150,\n    epaisseur: 22,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n\n  $: opt      = {...defaults, ...cleanObject(ui)}\n  $: data.opt = opt\n  $: data.ui  = ui\n\n  let zoom = 0.5\n\n  $: facade = new Piece()\n    .add_name(\"Façade\")\n    .build(opt.largeur, opt.hauteur, opt.epaisseur)\n    .put(0, 0, 0, 'xyz')\n    .add_features('panneau-seul')\n\n  $: pieces = [facade]\n\n  $: state.pieces = pieces\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} path={path} state={state} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Façade ${data.name}`} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Largeur    : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur    : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Épaisseur  : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Façade ${data.name}`, 'Facade')} />\n  </div>\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject, pipeline } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  let defaults = {\n    quantite: 1,\n    largeur: 400,\n    hauteur: 150,\n    hauteur_tir_max: 150,\n    profondeur: 500,\n    epaisseur: 15,\n    profondeur_rainure: 9,\n    profondeur_queues_arrondes: 10,\n    jeu_rainure: 1,\n    jeu_lateral: 6,\n    jeu_dessous: 28,\n    jeu_dessus: 7,\n    epaisseur_fond: 9,\n    inclure_fond: true,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n  let tir = {}\n\n  $: tir = calculTiroir({\n      ...defaults,\n      ...cleanObject(ui)\n    })\n\n  $: opt = {\n      ...defaults,\n      ...tir,\n      ...cleanObject(ui),\n    }\n\n  $: data.opt = opt\n  $: data.ui  = ui\n  let state = {}\n\n  $: cote = new Piece()\n    .add_name(\"Coté\")\n    .add_features('cote')\n    .build(\n      opt.profondeur_tir - 2 * (opt.epaisseur - opt.profondeur_queues_arrondes),\n      opt.hauteur_tir,\n      opt.epaisseur)\n  $: cote_g = cote\n    .add_name(\"gauche\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_queues_arrondes,\n      'zyx')\n  $: cote_d = cote\n    .add_name(\"droit\")\n    .put(\n      opt.jeu_lateral + opt.largeur_tir - opt.epaisseur,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_queues_arrondes,\n      'zyx')\n\n  $: face = new Piece()\n    .add_name(\"Face\")\n    .add_features('cote')\n    .build(opt.largeur_tir, opt.hauteur_tir, opt.epaisseur);\n  $: face_av = face\n    .add_name(\"avant\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      0,\n      'xyz')\n  $: face_ar = face\n    .add_name(\"arrière\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      opt.profondeur_tir - opt.epaisseur,\n      'xyz')\n\n  $: fond = new Piece()\n    .add_name(\"Fond tiroir\")\n    .add_features('panneau')\n    .build(\n      opt.largeur_tir - 2 * (opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.profondeur_tir - (opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.epaisseur_fond)\n    .put(\n      opt.jeu_lateral + opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure,\n      'xzy')\n\n  $: pieces = [\n    opt.inclure_fond ? fond : null,\n    face_av, face_ar,\n    cote_g, cote_d,\n  ].filter(x => x != null).map(p => p.multiply_que(opt.quantite))\n\n  $: pieces_group = new Group(pieces, `Tiroir ${data.name}`, 'Tiroir')\n  $: state.pieces_group = pieces_group\n\n  function calculTiroir(opt){\n    let largeur_tir = opt.largeur - 2 * opt.jeu_lateral\n    let profondeur_tir = opt.profondeur - (opt.profondeur % 50)\n    let hauteur_tir = Math.min(opt.hauteur_tir_max, opt.hauteur - opt.jeu_dessous - opt.jeu_dessus)\n    return {largeur_tir, profondeur_tir, hauteur_tir}\n  }\n\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n</style>\n\n<Component bind:data={data} state={state} path={path} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces_group} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Quantité : </span><InputNumber min=1 bind:value={ui.quantite} def={defaults.quantite}/></label>\n    <hr/>\n    <label><span>Largeur logement   : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur logement  : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Profondeur logement : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur} force={defaults.force_profondeur}/> mm</label>\n    <hr/>\n    <label><span>Largeur   : </span><InputNumber min=0 bind:value={ui.largeur_tir} def={tir.largeur_tir}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur_tir} def={tir.profondeur_tir}/> mm</label>\n    <label><span>Hauteur   : </span><InputNumber min=0 bind:value={ui.hauteur_tir} def={tir.hauteur_tir}/> mm</label>\n    <label><span>Hauteur max : </span><InputNumber min=0 bind:value={ui.hauteur_tir_max} def={defaults.hauteur_tir_max}/> mm</label>\n    <hr/>\n    <label><span>Profondeur queues d'arrondes : </span><InputNumber min=0 bind:value={ui.profondeur_queues_arrondes} def={defaults.profondeur_queues_arrondes}/> mm</label>\n    <label><span>Épaisseur : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n    <label><span>Épaisseur fond : </span><InputNumber min=0 bind:value={ui.epaisseur_fond} def={defaults.epaisseur_fond}/> mm</label>\n    <label><span>Profondeur rainures : </span><InputNumber min=0 bind:value={ui.profondeur_rainure} def={defaults.profondeur_rainure}/> mm</label>\n    <label><span>Jeu paneau / rainure : </span><InputNumber min=0 bind:value={ui.jeu_rainure} def={defaults.jeu_rainure}/> mm</label>\n    <label><span>Inclure le fond</span><InputCheckbox bind:checked={ui.inclure_fond} def={defaults.inclure_fond} /></label>\n    </form>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={pieces_group} />\n  </div>\n</Component>\n","<script>\n  import { version } from '../package.json';\n  import { setContext } from 'svelte';\n  import { readable, writable, get } from 'svelte/store';\n  import { routeDeclare } from './route.js';\n  import Settings from './Settings.svelte';\n  import TreeItem from './TreeItem.svelte';\n  import TreeItemOption from './TreeItemOption.svelte';\n  import Ensemble from './ensembles/Ensemble.svelte';\n  import Porte from './ensembles/Porte.svelte';\n  import Caisson from './ensembles/Caisson.svelte';\n  import Etagere from './ensembles/Etagere.svelte';\n  import Facade from './ensembles/Facade.svelte';\n  import Tiroir from './ensembles/Tiroir.svelte';\n  let components = { Porte, Caisson, Ensemble, Etagere, Facade, Tiroir }\n\n  setContext('App-components',  components)\n\n  let filename = `meuble_${new Date().toISOString().slice(0,16).replace(/T/, '_').replace(/:/, '')}.json`\n  let initdata = {}\n  let data = {}\n\n  $: data = {...initdata}\n\n  $: console.log('App initdata =', initdata)\n  //$: console.log('App data =', data)\n\n  let agencement = 'horizontal'\n\n  let settings = writable(JSON.parse(localStorage.getItem('calcul-meubles-settings') || '{}'))\n  setContext('settings', settings)\n  settings.subscribe(settings => {\n    if(settings.agencement && agencement != settings.agencement) agencement = settings.agencement\n    //console.log(\"App data.settings =\")\n    data.settings = settings\n    localStorage.setItem('calcul-meubles-settings', JSON.stringify(settings))\n  })\n  $: settings.update(settings => ({\n      ...settings,\n      agencement: agencement,\n    }))\n\n  let item = JSON.parse(localStorage.getItem('calcul-meubles-data') || 'null')\n  let fileData = localStorage.getItem('calcul-meubles-file-data')\n  if(item) {\n    initdata = item.data\n    filename = item.filename\n  }\n\n  $: localStorage.setItem('calcul-meubles-data', JSON.stringify({data: data, filename: filename}))\n  $: localStorage.setItem('calcul-meubles-file-data', fileData)\n\n  function clear(){\n    if(!isSaved()) {\n      if(!confirm(\"Fichier non enregistré, voulez-vous continuer et perdre les modifications en cours?\")) return\n      localStorage.setItem('calcul-meubles-data-backup', localStorage.getItem('calcul-meubles-data'))\n      localStorage.setItem('calcul-meubles-file-data-backup', localStorage.getItem('calcul-meubles-file-data'))\n    }\n    localStorage.removeItem('calcul-meubles-data')\n    localStorage.removeItem('calcul-meubles-file-data')\n    window.location.reload()\n  }\n\n  function rename(){\n    let new_filename = prompt(\"Nom du fichier\", filename)\n    if (new_filename == null) return false\n    filename = new_filename.replace(/\\.json$/, '') + '.json'\n    return true\n  }\n\n  function saveAs(){\n    save(true)\n  }\n\n  function ensureSaved(){\n    let item = localStorage.getItem('calcul-meubles-data')\n    if (item) {\n      if(save(false) == 'cancelled') return false;\n    }\n    return true;\n  }\n\n  function isSaved(){\n    if(data.children.length == 0) return true;\n    let json = JSON.stringify(data, null, 2)\n    if (json == fileData) return true;\n    console.log(\"isSaved() = false\", json, fileData)\n    return false;\n  }\n\n  function simpleSave(){\n    if(save(false) == 'already-saved') {\n      alert(\"Déjà enregistré\")\n    }\n  }\n\n  function save(saveAs){\n    if(!saveAs && isSaved()){\n      return 'already-saved';\n    }\n    let json = JSON.stringify(data, null, 2)\n\n    if(saveAs && !rename()) return 'cancelled';\n\n    let file = new window.File([json], filename, {\n      type: 'application/json'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n\n      localStorage.removeItem('calcul-meubles-data')\n      fileData = json\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n\n  function open(){\n    if(!isSaved()) {\n      alert(\"Fichier non enregistré, veuillez enregistrer le fichier avant d'en ouvrir un nouveau.\")\n      return\n    }\n    let input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file')\n    input.addEventListener('change', (e) => {\n      let file = e.target.files[0];\n      if (!file) return\n\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        initdata = JSON.parse(e.target.result)\n        settings.set(initdata.settings || {})\n        filename = file.name\n        fileData = e.target.result\n      }\n      reader.readAsText(file);\n    }, false)\n\n    document.body.appendChild(input);\n    input.click();\n    document.body.removeChild(input);\n  }\n\n  function moveTree(e){\n    window.location.hash = e.target.value\n  }\n\n  function openSettings(){\n    window.location.hash = '#/settings'\n  }\n\n  let root_target;\n  routeDeclare((route) => {\n    return route.root ? [root_target] : []\n  })\n\n  function onDataChange(e) {\n    //console.log(`App datachange{${Object.keys(e.detail).join()}} = %o`, e.detail);\n    data = e.detail.data\n  }\n</script>\n\n<style>\n  button, select {\n    margin: 0;\n  }\n  .tree button, .tree select {\n    padding: 1px;\n  }\n  .root {\n    display: flex;\n    grid-template-rows: 3rem auto;\n    grid-template-columns: minmax(0, 1fr) auto;\n    grid-template-areas:\n      \"toolbar toolbar\"\n      \"tree main\";\n    flex-flow: row nowrap;\n    height: 100%\n  }\n  .agencement-horizontal.root {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-areas:\n      \"toolbar\"\n      \"main\";\n  }\n  .root.agencement-vertical .tree {\n    flex: 0 0 auto\n  }\n  .toolbar {\n    padding: 4px;\n    grid-area: toolbar;\n    background-color: var(--light-bg-color);\n    border-bottom: solid 1px var(--border-color);\n  }\n  .open-save-buttons {\n    display: grid;\n    align-content: stretch;\n    grid-template-rows: repeat(2, 50fr);\n    grid-template-columns: repeat(2, auto);\n  }\n  .tree {\n    grid-area: tree;\n    background-color: var(--light-bg-color);\n    border-right: solid 1px var(--border-color);\n    overflow: auto;\n    width: 15rem;\n    resize: horizontal;\n  }\n  .tree :global(ul) {\n    padding-left: 1em;\n  }\n  .tree :global(ul) :global(ul) {\n    /*border-left: solid 1px var(--border-color);*/\n  }\n  .agencement-horizontal .tree {\n    display: none;\n  }\n  .root.agencement-vertical .tree-select {\n    display: none;\n  }\n  .main {\n    flex: 1 1 auto;\n    grid-area: main;\n    overflow: auto;\n    justify-self: stretch;\n  }\n\n  @media print {\n    .root, .main {\n      display: block !important;\n      overflow: visible !important;\n      height: auto;\n    }\n  }\n</style>\n\n<div class=\"root agencement-{agencement}\">\n\n  {#if agencement == 'horizontal'}\n  <div class=\"toolbar\">\n    <select on:change={moveTree} class=\"tree-select\">\n      <option value='#/settings'>Paramètres</option>\n      <TreeItemOption data={data}/>\n    </select>\n    <button on:click={clear}>Effacer</button>\n    <button on:click={simpleSave}>Enregistrer</button>\n    <button on:click={saveAs}>Enregistrer sous...</button>\n    <button on:click={open}>Ouvrir...</button>\n    {filename} <a href=\"@\" on:click|preventDefault={rename}>✎</a>\n    <div style=\"float: right\">\n      <small>(version {version})</small>\n      <label style=\"display: inline\">\n        Agencement :\n        <select bind:value={agencement}>\n          <option value='horizontal'>Horizontal</option>\n          <option value='vertical'>Vertical</option>\n        </select>\n      </label>\n      <button on:click={openSettings}>Paramètres...</button>\n    </div>\n  </div>\n  {/if}\n\n  <div class=\"tree\">\n    {#if agencement == 'vertical'}\n      <div class=\"open-save-buttons\">\n        <select bind:value={agencement}>\n          <option value='horizontal'>Agencement horizontal</option>\n          <option value='vertical'>Agencement vertical</option>\n        </select>\n        <button on:click={openSettings}>Paramètres...</button>\n        <button on:click={simpleSave}>Enregistrer</button>\n        <button on:click={saveAs}>Enregistrer sous...</button>\n        <button on:click={clear}>Nouveau</button>\n        <button on:click={open}>Ouvrir...</button>\n      </div>\n      <p>{filename} <a href=\"@\" on:click|preventDefault={rename}>✎</a></p>\n      <p><small>(version {version})</small></p>\n    {/if}\n    <ul>\n      <li>\n        <TreeItem data={data}/>\n      </li>\n      {#if agencement == 'vertical'}\n        <li><a href=\"@\" on:click|preventDefault={openSettings}>Paramètres...</a></li>\n      {/if}\n    </ul>\n  </div>\n\n  <div class=\"main\">\n    <Ensemble name=\"Meuble\" initdata={initdata} on:datachange={onDataChange} />\n    <div class=\"routable\" bind:this={root_target}>\n      <details>\n        <summary>Contenu du fichier</summary>\n        <pre id=\"json\">{JSON.stringify(data, null, 2)}</pre>\n      </details>\n    </div>\n    <Settings bind:settings={settings} />\n  </div>\n</div>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","setContext","context","set","getContext","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","bound","create_component","mount_component","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","routeInfo","hash","path","substr","mcomp","match","msettings","component_id","component_selector","component_path","settings","root","routeDeclare","cb","previousTargets","onHashChange","t","console","log","remove","window","location","cleanObject","reduce","pipeline","operations","res","nextId","id","item","parseInt","placeholder","min","step","def","force","size","ui","defname","default_value_id","random","toString","substring","inner_val","find","op","textContent","findDefName","error","title","checked","tristate","prev","curr","readOnly","postes_estimations","components","join","indice","JSON","stringify","porte_type","cubeprice","cubemargin","version","settings_opened","componentNames","subscribe","root_element","addEstim","estimName","prompt","h","removeEstim","idx","renameEstim","poste","newName","route","display","file","files","reader","FileReader","onload","parse","result","readAsText","body","click","comp","prefix","indent","polyline","piece","pos","projection_polyline","co","warn","pieces","projection_position","containerElement","svgElement","zoom","mode","setMode","pieces_list","individual","xmax","ymax","zmax","bounding_box","b0","b1","markup","outerHTML","filename","File","url","URL","createObjectURL","href","revokeObjectURL","get_position","get_orient","orient","Group","component_type","x","y","z","features","concat","prefix_name","nameprefix","total","groups","flat_groups","s","surface","nombre_tenons","update_new","prototype","largeur","bb","xmin","hauteur","ymin","profondeur","zmin","bounds","axis","toLowerCase","dim","arguments","includes","count_features","counts","feat","source","dispatch","state","childrenState","multi_drawings","renameChild","deleteChild","confirm","children2","onDataChange","addChild","dispatchDatachange","show","pieces_drawings","childrenPos","defaultChildrenPos","drawings","uiPos","_","resizeChildrenPos","pieces0","pieces_group","g","position","calculEstimations","pieceg","constants","group","postes","estim","estim_idx","calculEstimation","computed","base_value","tot","calculShallowGroupEstimations","epaisseur","base_unit","cst_key","val","toFixed","temps","all_mins","onlyMins","mins","csv_line","line","replaceAll","estimations","lines","row","indices_first_row","first_row","estim_comp","csv","epaisseurs","nb_pieces","nb_panneaux","m2_panneaux","dimension_x","dimension_y","dimension_z","nb_tenons","name_list","que","string_dimentions","string_arrasement","longueur","epaisseur_plateau","cubage","prix","comparePieces","p1","p2","merge","separer","totaux","par_epaiss","par_type","statistics","pieces2","names","nom","split","quantite","sort","pieces3","values","signature","family","total_cube","total_prix","total_group","pieces_par_epaisseur","stats_epaisseur","panneaux","stat","calculStatistics","statistics_epaisseurs","ep","initdata","defaults","initdataChanged","updateData","text_suffix","zstart","zlength","suffix","rotate","reverse","dim2","start","Piece","arrasement","cond","Exception","longueur_tenon1","longueur_tenon2","names_list","idval","build","dim1","dim3","sign","dims","dx","dy","dz","_1","t1x","_2","t2x","_3","t1y","_4","t2y","dx1","floor","dx2","dy1","dy2","factor","prix_cube","other","assert","profondeur_profil","profondeur_tenons","ferrage","force_ferrage","force_largeur","force_hauteur","force_epaisseur","largeur_montants","largeur_traverses","largeur_traverse_h","largeur_traverse_b","epaisseur_panneau","profondeur_rainure","jeu_rainure","inclure_panneau","encastree","jeu_encastrement","opt","montant","add_name","add_features","montant_g","put","montant_d","traverse","ajout_tenons","traverse_xpos","traverse_h","traverse_b","panneau","multiply_que","casiers","montants","traverses","colonnes","panneau_dessous","separer_haut","panneau_haut","panneau_dessus","separer_bas","panneau_bas","panneau_dos","tiroir","porte","double","actif","panneaux_actifs","droite","gauche","facade","num_etageres","hauteur_traverses_separees","epaisseur_montants","epaisseur_traverses","profondeur_tenons_cotes","montants_inter_longueur_tenon","defaultPosition","profondeur_tenons_intermediaire","hauteur_traverses","hauteur_traverse","num_colonnes","largeur_colonnes","largeur_definie","num_casiers_colonnes","hauteur_casiers_colonnes","cas","hauteur_definie","ui_colonnes","ui_montants","selection_casier_input","calculCasiers","colonne","hauteurs","num","ui_colonne","espace_a_repartir","hauteurs_definies","casiers_a_calculer","espace_restant","espace_par_casier","j","ui_casier","casier","calculPositionCasiers","xpos","jj","ypos","piece_panneau","all_pieces","child_pieces","selection_casier_i","selection_casier_j","selection_casier","opt2","num_casiers","updateSubdivisions","largeurs","cols","largeurs_definies","cols_a_calculer","espace_par_col","calculLargeurColonnes","col","calculColonnesCasiers","subdivisions_montants","ui_montant","casiers_g","casiers_d","hauteurs_g","hauteurs_d","hh","h1","h0","y1","y2","ui_panneaux_actifs","arr","last","cote","calculSubdivisionMontants","creePorteColonne","creeEtageres","supprimeEtageres","creeTiroirCasier","creePorteCasier","child","configurePorteColonne","configurePorteFacadeCasier","configureTiroir","configureEtagere","child_idx","findIndex","demi","encastre","epaisseur_porte","typePorte","force_profondeur","variants","all_variants","child_idx_g","child_idx_d","namePrefix","side","retrait","calculEnfants","montants_template","montant_ar_g","montant_av_g","montant_ar_d","montant_av_d","traverses_cote","usine_tenons","traverse_cote_h_g","traverse_cote_b_g","traverse_cote_h_d","traverse_cote_b_d","traverse_ar_h","traverse_ar_b","traverse_av_h","traverse_av_b","panneaux_haut_bas","panneau_h","panneau_b","panneaux_dos","montants_cloisons","montants_cloisons_av","montants_cloisons_ar","traverses_cote_inter_caissons","sub","panneaux_cote_et_cloisons","traverses_cloisons","traverses_cloisons_h","build_if","traverses_cloisons_b","traverses_inter2_av_ar","traverses_inter2_av","tr","traverses_inter2_ar","panneau_inter2_dessous","etagere","largeur_tir","profondeur_tir","hauteur_tir","hauteur_tir_max","profondeur_queues_arrondes","epaisseur_fond","inclure_fond","jeu_lateral","jeu_dessous","jeu_dessus","tir","calculTiroir","cote_g","cote_d","face","face_av","face_ar","fond","moveTree","openSettings","Porte","Caisson","Ensemble","Etagere","Facade","Tiroir","Date","toISOString","replace","agencement","stop","subscribers","new_value","run_queue","invalidate","subscriber","writable","localStorage","getItem","setItem","root_target","fileData","rename","new_filename","isSaved","json","save","saveAs","removeItem","reload","alert"],"mappings":"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"}